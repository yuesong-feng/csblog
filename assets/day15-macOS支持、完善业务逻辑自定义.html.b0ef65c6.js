import{_ as p,o as t,c as e,b as n,d as o,a as c,e as s,r as l}from"../app.dbff23ac.mjs";const u={},i=c(`<h1 id="day15-macos\u652F\u6301\u3001\u5B8C\u5584\u4E1A\u52A1\u903B\u8F91\u81EA\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#day15-macos\u652F\u6301\u3001\u5B8C\u5584\u4E1A\u52A1\u903B\u8F91\u81EA\u5B9A\u4E49" aria-hidden="true">#</a> day15-macOS\u652F\u6301\u3001\u5B8C\u5584\u4E1A\u52A1\u903B\u8F91\u81EA\u5B9A\u4E49</h1><p>\u4F5C\u4E3A\u7A0B\u5E8F\u5458\uFF0C\u4F7F\u7528MacBook\u7535\u8111\u4F5C\u4E3A\u5F00\u53D1\u673A\u5F88\u5E38\u89C1\uFF0C\u672C\u8D28\u548CLinux\u51E0\u4E4E\u6CA1\u6709\u533A\u522B\u3002\u672C\u6559\u7A0B\u7684EventLoop\u4E2D\u4F7F\u7528Linux\u7CFB\u7EDF\u652F\u6301\u7684epoll\uFF0C\u7136\u800CmacOS\u91CC\u5E76\u6CA1\u6709epoll\uFF0C\u53D6\u800C\u4EE3\u4E4B\u7684\u662FFreeBSD\u7684kqueue\uFF0C\u529F\u80FD\u548C\u4F7F\u7528\u90FD\u548Cepoll\u5F88\u76F8\u4F3C\u3002Windows\u7CFB\u7EDF\u4F7F\u7528WSL\u53EF\u4EE5\u5B8C\u7F8E\u7F16\u8BD1\u8FD0\u884C\u6E90\u4EE3\u7801\uFF0C\u4F46MacBook\u5219\u9700\u8981Docker\u3001\u4E91\u670D\u52A1\u5668\u3001\u6216\u662F\u865A\u62DF\u673A\uFF0C\u5F88\u9EBB\u70E6\u3002\u5728\u4ECA\u5929\uFF0C\u6211\u4EEC\u5C06\u652F\u6301\u4F7F\u7528kqueue\u4F5C\u4E3A<code>EventLoop</code>\u7C7B\u7684Poller\uFF0C\u4F7F\u7F51\u7EDC\u5E93\u53EF\u4EE5\u5728macOS\u7B49FreeBSD\u7CFB\u7EDF\u4E0A\u539F\u751F\u8FD0\u884C\u3002</p><p>\u5728\u7F51\u7EDC\u5E93\u5DF2\u6709\u7684\u7C7B\u5F53\u4E2D\uFF0C<code>Socket</code>\u548C<code>Epoll</code>\u7C7B\u662F\u6700\u5E95\u5C42\u7684\u3001\u9700\u8981\u548C\u64CD\u4F5C\u7CFB\u7EDF\u6253\u4EA4\u9053\uFF0C\u800C\u4E0A\u4E00\u5C42\u7684<code>EventLoop</code>\u7C7B\u53EA\u662F\u4F7F\u7528<code>Epoll</code>\u63D0\u4F9B\u7684\u63A5\u53E3\uFF0C\u800C\u4E0D\u5173\u5FC3<code>Epoll</code>\u7C7B\u7684\u5E95\u5C42\u5B9E\u73B0\u3002\u6240\u4EE5\u5728\u8003\u8651\u652F\u6301\u4E0D\u540C\u7684\u64CD\u4F5C\u7CFB\u7EDF\u65F6\uFF0C\u53EA\u5E94\u8BE5\u6539\u53D8\u6700\u5E95\u5C42\u7684<code>Epoll</code>\u7C7B\uFF0C\u800C\u4E0D\u9700\u8981\u6539\u52A8\u4E0A\u5C42\u7684<code>EventLoop</code>\u7C7B\u3002\u81F3\u4E8E\u5206\u53D1<code>fd</code>\u7684<code>Channel</code>\u7C7B\uFF0C\u53EF\u4EE5\u81EA\u5B9A\u4E49epoll\u548Ckqueue\u7684\u8BFB\u3001\u5199\u3001ET\u6A21\u5F0F\u7B49\u4E8B\u4EF6\uFF0C\u5728<code>Channel</code>\u7C7B\u4E2D\u53EA\u9700\u8981\u6CE8\u518C\u597D\u6211\u4EEC\u81EA\u5B9A\u4E49\u7684\u4E8B\u4EF6\uFF0C\u7136\u540E\u5728<code>Poller</code>\u7C7B\u4E2D\u5C06\u4E8B\u4EF6\u6CE8\u518C\u5230epoll\u6216kqueue\u3002</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">const</span> <span class="token keyword">int</span> Channel<span class="token double-colon punctuation">::</span>READ_EVENT <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">int</span> Channel<span class="token double-colon punctuation">::</span>WRITE_EVENT <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">int</span> Channel<span class="token double-colon punctuation">::</span>ET <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9700\u8981\u6CE8\u610F<code>Channel</code>\u7684\u7528\u6237\u81EA\u5B9A\u4E49\u4E8B\u4EF6\u5FC5\u987B\u662F1\u30012\u30014\u30018\u300116\u7B49\u5341\u8FDB\u5236\u6570\uFF0C\u56E0\u4E3A\u5728<code>Poller</code>\u4E2D\u5224\u65AD\u3001\u66F4\u65B0\u4E8B\u4EF6\u65F6\u9700\u8981\u7528\u5230\u6309\u4F4D\u4E0E\u3001\u6309\u4F4D\u6216\u7B49\u64CD\u4F5C\uFF0C\u8FD9\u91CC\u5B9E\u9645\u4E0A\u662F\u5C0616\u4F4D\u4E8C\u8FDB\u5236\u6570\u7684\u6BCF\u4E00\u4F4D\u7528\u4F5C\u6807\u5FD7\u4F4D\u3002\u5982\u679C\u8FD9\u91CC\u7406\u89E3\u6709\u56F0\u96BE\uFF0C\u53EF\u4EE5\u5148\u5B66\u4E00\u904D\u300A\u6DF1\u5165\u7406\u89E3\u8BA1\u7B97\u673A\u7CFB\u7EDF\uFF08\u7B2C\u4E09\u7248\uFF09\u300B.</p><p>\u5728<code>Poller</code>\u7C7B\u4E2D\u4F7F\u7528\u5B8F\u5B9A\u4E49\u7684\u5F62\u5F0F\u5224\u65AD\u5F53\u524D\u64CD\u4F5C\u7CFB\u7EDF\uFF0C\u4ECE\u800C\u4F7F\u7528\u4E0D\u540C\u7684\u4EE3\u7801:</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">OS_LINUX</span></span>
<span class="token comment">// linux\u5E73\u53F0\u7684\u4EE3\u7801</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">OS_MACOS</span></span>
<span class="token comment">// FreeBSD\u5E73\u53F0\u7684\u4EE3\u7801</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u64CD\u4F5C\u7CFB\u7EDF\u5B8F\u5728CMakeLists.txt\u4E2D\u5B9A\u4E49\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>if (CMAKE_SYSTEM_NAME MATCHES &quot;Darwin&quot;)
    message(STATUS &quot;Platform: macOS&quot;)
    set(CMAKE_CXX_FLAGS &quot;\${CMAKE_CXX_FLAGS} -DOS_MACOS&quot;)
elseif (CMAKE_SYSTEM_NAME MATCHES &quot;Linux&quot;)
    message(STATUS &quot;Platform: Linux&quot;)
    set(CMAKE_CXX_FLAGS &quot;\${CMAKE_CXX_FLAGS} -DOS_LINUX&quot;)
endif()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\u5C31\u53EF\u4EE5\u5728\u4E0D\u540C\u7684\u64CD\u4F5C\u7CFB\u7EDF\u4F7F\u7528\u4E0D\u540C\u7684\u4EE3\u7801\u3002\u5982\u6CE8\u518C/\u66F4\u65B0<code>Channel</code>\uFF0C\u5728Linux\u7CFB\u7EDF\u4E0B\u4F1A\u7F16\u8BD1\u4EE5\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">Poller</span><span class="token double-colon punctuation">::</span><span class="token function">UpdateChannel</span><span class="token punctuation">(</span>Channel <span class="token operator">*</span>ch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> sockfd <span class="token operator">=</span> ch<span class="token operator">-&gt;</span><span class="token function">GetSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">GetFd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">struct</span> <span class="token class-name">epoll_event</span> ev <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  ev<span class="token punctuation">.</span>data<span class="token punctuation">.</span>ptr <span class="token operator">=</span> ch<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ch<span class="token operator">-&gt;</span><span class="token function">GetListenEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> Channel<span class="token double-colon punctuation">::</span>READ_EVENT<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ev<span class="token punctuation">.</span>events <span class="token operator">|=</span> EPOLLIN <span class="token operator">|</span> EPOLLPRI<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ch<span class="token operator">-&gt;</span><span class="token function">GetListenEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> Channel<span class="token double-colon punctuation">::</span>WRITE_EVENT<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ev<span class="token punctuation">.</span>events <span class="token operator">|=</span> EPOLLOUT<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ch<span class="token operator">-&gt;</span><span class="token function">GetListenEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> Channel<span class="token double-colon punctuation">::</span>ET<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ev<span class="token punctuation">.</span>events <span class="token operator">|=</span> EPOLLET<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ch<span class="token operator">-&gt;</span><span class="token function">GetExist</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">ErrorIf</span><span class="token punctuation">(</span><span class="token function">epoll_ctl</span><span class="token punctuation">(</span>fd_<span class="token punctuation">,</span> EPOLL_CTL_ADD<span class="token punctuation">,</span> sockfd<span class="token punctuation">,</span> <span class="token operator">&amp;</span>ev<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;epoll add error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ch<span class="token operator">-&gt;</span><span class="token function">SetExist</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">ErrorIf</span><span class="token punctuation">(</span><span class="token function">epoll_ctl</span><span class="token punctuation">(</span>fd_<span class="token punctuation">,</span> EPOLL_CTL_MOD<span class="token punctuation">,</span> sockfd<span class="token punctuation">,</span> <span class="token operator">&amp;</span>ev<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;epoll modify error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u800C\u5728macOS\u7CFB\u7EDF\u4E0B\u4F1A\u7F16\u8BD1\u4EE5\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">Poller</span><span class="token double-colon punctuation">::</span><span class="token function">UpdateChannel</span><span class="token punctuation">(</span>Channel <span class="token operator">*</span>ch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">struct</span> <span class="token class-name">kevent</span> ev<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function">memset</span><span class="token punctuation">(</span>ev<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token operator">*</span>ev<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> fd <span class="token operator">=</span> ch<span class="token operator">-&gt;</span><span class="token function">GetSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">GetFd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> op <span class="token operator">=</span> EV_ADD<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ch<span class="token operator">-&gt;</span><span class="token function">GetListenEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> ch<span class="token operator">-&gt;</span>ET<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    op <span class="token operator">|=</span> EV_CLEAR<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ch<span class="token operator">-&gt;</span><span class="token function">GetListenEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> ch<span class="token operator">-&gt;</span>READ_EVENT<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">EV_SET</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ev<span class="token punctuation">[</span>n<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fd<span class="token punctuation">,</span> EVFILT_READ<span class="token punctuation">,</span> op<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ch<span class="token operator">-&gt;</span><span class="token function">GetListenEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> ch<span class="token operator">-&gt;</span>WRITE_EVENT<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">EV_SET</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ev<span class="token punctuation">[</span>n<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fd<span class="token punctuation">,</span> EVFILT_WRITE<span class="token punctuation">,</span> op<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">int</span> r <span class="token operator">=</span> <span class="token function">kevent</span><span class="token punctuation">(</span>fd_<span class="token punctuation">,</span> ev<span class="token punctuation">,</span> n<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">ErrorIf</span><span class="token punctuation">(</span>r <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;kqueue add event error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E4B\u524D\u7684\u6559\u7A0B\u4E2D\uFF0C\u6211\u4EEC\u4F7F<code>Connection</code>\u7C7B\u4EE5<code>OnConnect</code>\u56DE\u8C03\u51FD\u6570\u7684\u65B9\u5F0F\u521D\u6B65\u652F\u6301\u4E86\u4E1A\u52A1\u903B\u8F91\u81EA\u5B9A\u4E49\uFF0C\u81EA\u5B9A\u4E49\u7684\u4E1A\u52A1\u903B\u8F91\u662F\u4ECE\u670D\u52A1\u5668\u7AEF\u53EF\u8BFB\u4E8B\u4EF6\u89E6\u53D1\u540E\u5F00\u59CB\u8FDB\u5165\uFF0C\u6240\u4EE5\u9700\u8981\u81EA\u5DF1\u5904\u7406\u8BFB\u53D6\u6570\u636E\u7684\u903B\u8F91\u3002\u8FD9\u663E\u7136\u4E0D\u5408\u7406\uFF0C\u600E\u6837\u4E8B\u4EF6\u89E6\u53D1\u3001\u8BFB\u53D6\u6570\u636E\u3001\u5F02\u5E38\u5904\u7406\u7B49\u6D41\u7A0B\u5E94\u8BE5\u662F\u7F51\u7EDC\u5E93\u63D0\u4F9B\u7684\u57FA\u672C\u529F\u80FD\uFF0C\u7528\u6237\u53EA\u5E94\u5F53\u5173\u6CE8\u600E\u6837\u5904\u7406\u4E1A\u52A1\u5373\u53EF\uFF0C\u6240\u4EE5\u4E1A\u52A1\u903B\u8F91\u7684\u8FDB\u5165\u70B9\u5E94\u8BE5\u662F\u670D\u52A1\u5668\u8BFB\u53D6\u5B8C\u5BA2\u6237\u7AEF\u7684\u6240\u6709\u6570\u636E\u4E4B\u540E\u3002\u8FD9\u662F\uFF0C\u5BA2\u6237\u7AEF\u4F20\u6765\u7684\u8BF7\u6C42\u5728<code>Connection</code>\u7C7B\u7684\u8BFB\u7F13\u51B2\u533A\u91CC\uFF0C\u6211\u4EEC\u53EA\u9700\u8981\u6839\u636E\u8BF7\u6C42\u6765\u5206\u53D1\u3001\u5904\u7406\u4E1A\u52A1\u5373\u53EF\u3002</p><p>\u901A\u8FC7\u8BBE\u7F6E<code>OnMessage</code>\u56DE\u8C03\u51FD\u6570\u6765\u81EA\u5B9A\u4E49\u81EA\u5DF1\u7684\u4E1A\u52A1\u903B\u8F91\uFF0C\u5728\u670D\u52A1\u5668\u5B8C\u5168\u63A5\u6536\u5230\u5BA2\u6237\u7AEF\u7684\u6570\u636E\u4E4B\u540E\uFF0C\u8BE5\u51FD\u6570\u89E6\u53D1\u3002\u4EE5\u4E0B\u662F\u4E00\u4E2Aecho\u670D\u52A1\u5668\u7684\u4E1A\u52A1\u903B\u8F91\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>server<span class="token operator">-&gt;</span><span class="token function">OnMessage</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span>Connection <span class="token operator">*</span>conn<span class="token punctuation">)</span><span class="token punctuation">{</span>
  std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Message from client &quot;</span> <span class="token operator">&lt;&lt;</span> conn<span class="token operator">-&gt;</span><span class="token function">ReadBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> std<span class="token double-colon punctuation">::</span>endl<span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>conn<span class="token operator">-&gt;</span><span class="token function">GetState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> Connection<span class="token double-colon punctuation">::</span>State<span class="token double-colon punctuation">::</span>Connected<span class="token punctuation">)</span><span class="token punctuation">{</span>
    conn<span class="token operator">-&gt;</span><span class="token function">Send</span><span class="token punctuation">(</span>conn<span class="token operator">-&gt;</span><span class="token function">ReadBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FDB\u5165\u8BE5\u51FD\u6570\u524D\uFF0C\u670D\u52A1\u5668\u5DF2\u7ECF\u5B8C\u6210\u4E86\u63A5\u53D7\u5BA2\u6237\u7AEF\u6570\u636E\u5E76\u4FDD\u5B58\u5728\u8BFB\u7F13\u51B2\u533A\u91CC\uFF0C\u4E1A\u52A1\u903B\u8F91\u53EA\u9700\u8981\u5C06\u8BFB\u7F13\u51B2\u533A\u91CC\u7684\u6570\u636E\u53D1\u9001\u56DE\u5373\u53EF\uFF0C\u8FD9\u6837\u7684\u8BBE\u8BA1\u66F4\u52A0\u7B26\u5408\u670D\u52A1\u5668\u7684\u529F\u80FD\u51C6\u5219\u4E0E\u8BBE\u8BA1\u51C6\u5219\u3002</p><p>\u5728\u4ECA\u5929\u7684\u6559\u7A0B\u4E2D\uFF0C\u6211\u4EEC\u652F\u6301\u4E86MacOS\u3001FreeBSD\u5E73\u53F0\u3002\u5728\u4EE3\u7801\u4E2D\u53BB\u6389\u4E86<code>Epoll</code>\u7C7B\uFF0C\u6539\u4E3A\u901A\u7528\u7684<code>Poller</code>\uFF0C\u5728\u4E0D\u540C\u7684\u5E73\u53F0\u4F1A\u81EA\u9002\u5E94\u5730\u7F16\u8BD1\u4E0D\u540C\u7684\u4EE3\u7801\u3002\u540C\u65F6\u6211\u4EEC\u5C06<code>Channel</code>\u7C7B\u548C\u64CD\u4F5C\u7CFB\u7EDF\u8131\u79BB\u5F00\u6765\uFF0C\u901A\u8FC7\u7528\u6237\u81EA\u5B9A\u4E49\u4E8B\u4EF6\u6765\u8868\u793A\u76D1\u542C\u3001\u53D1\u751F\u7684\u4E8B\u4EF6\u3002\u73B0\u5728\u5728Linux\u548CmacOS\u7CFB\u7EDF\u4E2D\uFF0C\u7F51\u7EDC\u5E93\u90FD\u53EF\u4EE5\u539F\u751F\u7F16\u8BD1\u8FD0\u884C\u3002\u4F46\u5177\u4F53\u529F\u80FD\u53EF\u80FD\u4F1A\u6839\u636E\u64CD\u4F5C\u7CFB\u7EDF\u7684\u4E0D\u540C\u6709\u7EC6\u5FAE\u5DEE\u5F02\uFF0C\u5982\u5728macOS\u5E73\u53F0\u4E0B\u7684\u5E76\u53D1\u652F\u6301\u5EA6\u660E\u663E\u6CA1\u6709Linux\u5E73\u53F0\u9AD8\uFF0C\u5728\u540E\u9762\u7684\u5F00\u53D1\u4E2D\u4F1A\u4E0D\u65AD\u5B8C\u5584\u3002\u6211\u4EEC\u4E5F\u5B8C\u5584\u4E86\u4E1A\u52A1\u903B\u8F91\u81EA\u5B9A\u4E49\uFF0C\u8FDB\u4E00\u6B65\u7B80\u5316\u4E86\u670D\u52A1\u5668\u7F16\u7A0B\u3001\u9690\u85CF\u4E86\u66F4\u591A\u7EC6\u8282\uFF0C\u4F7F\u7528\u8005\u53EA\u9700\u8981\u5B8C\u5168\u5173\u6CE8\u81EA\u5DF1\u6838\u5FC3\u7684\u4E1A\u52A1\u903B\u8F91\u3002</p>`,18),k=s("\u5B8C\u6574\u6E90\u4EE3\u7801\uFF1A"),r={href:"https://github.com/yuesong-feng/30dayMakeCppServer/tree/main/code/day15",target:"_blank",rel:"noopener noreferrer"},d=s("https://github.com/yuesong-feng/30dayMakeCppServer/tree/main/code/day15");function v(m,b){const a=l("ExternalLinkIcon");return t(),e("div",null,[i,n("p",null,[k,n("a",r,[d,o(a)])])])}const E=p(u,[["render",v],["__file","day15-macOS\u652F\u6301\u3001\u5B8C\u5584\u4E1A\u52A1\u903B\u8F91\u81EA\u5B9A\u4E49.html.vue"]]);export{E as default};
