import{_ as p,o as t,c as e,b as n,d as o,a as c,e as s,r as l}from"../app.dbff23ac.mjs";const u={},i=c(`<h1 id="day03-\u9AD8\u5E76\u53D1\u8FD8\u5F97\u7528epoll" tabindex="-1"><a class="header-anchor" href="#day03-\u9AD8\u5E76\u53D1\u8FD8\u5F97\u7528epoll" aria-hidden="true">#</a> day03-\u9AD8\u5E76\u53D1\u8FD8\u5F97\u7528epoll</h1><p>\u5728\u4E0A\u4E00\u5929\uFF0C\u6211\u4EEC\u5199\u4E86\u4E00\u4E2A\u7B80\u5355\u7684echo\u670D\u52A1\u5668\uFF0C\u4F46\u53EA\u80FD\u540C\u65F6\u5904\u7406\u4E00\u4E2A\u5BA2\u6237\u7AEF\u7684\u8FDE\u63A5\u3002\u4F46\u5728\u8FD9\u4E2A\u8FDE\u63A5\u7684\u751F\u547D\u5468\u671F\u4E2D\uFF0C\u7EDD\u5927\u90E8\u5206\u65F6\u95F4\u90FD\u662F\u7A7A\u95F2\u7684\uFF0C\u6D3B\u8DC3\u65F6\u95F4\uFF08\u53D1\u9001\u6570\u636E\u548C\u63A5\u6536\u6570\u636E\u7684\u65F6\u95F4\uFF09\u5360\u6BD4\u6781\u5C11\uFF0C\u8FD9\u6837\u72EC\u5360\u4E00\u4E2A\u670D\u52A1\u5668\u662F\u4E25\u91CD\u7684\u8D44\u6E90\u6D6A\u8D39\u3002\u4E8B\u5B9E\u4E0A\u6240\u6709\u7684\u670D\u52A1\u5668\u90FD\u662F\u9AD8\u5E76\u53D1\u7684\uFF0C\u53EF\u4EE5\u540C\u65F6\u4E3A\u6210\u5343\u4E0A\u4E07\u4E2A\u5BA2\u6237\u7AEF\u63D0\u4F9B\u670D\u52A1\uFF0C\u8FD9\u4E00\u6280\u672F\u53C8\u88AB\u79F0\u4E3AIO\u590D\u7528\u3002</p><blockquote><p>IO\u590D\u7528\u548C\u591A\u7EBF\u7A0B\u6709\u76F8\u4F3C\u4E4B\u5904\uFF0C\u4F46\u7EDD\u4E0D\u662F\u4E00\u4E2A\u6982\u5FF5\u3002IO\u590D\u7528\u662F\u9488\u5BF9IO\u63A5\u53E3\uFF0C\u800C\u591A\u7EBF\u7A0B\u662F\u9488\u5BF9CPU\u3002</p></blockquote><p>IO\u590D\u7528\u7684\u57FA\u672C\u601D\u60F3\u662F\u4E8B\u4EF6\u9A71\u52A8\uFF0C\u670D\u52A1\u5668\u540C\u65F6\u4FDD\u6301\u591A\u4E2A\u5BA2\u6237\u7AEFIO\u8FDE\u63A5\uFF0C\u5F53\u8FD9\u4E2AIO\u4E0A\u6709\u53EF\u8BFB\u6216\u53EF\u5199\u4E8B\u4EF6\u53D1\u751F\u65F6\uFF0C\u8868\u793A\u8FD9\u4E2AIO\u5BF9\u5E94\u7684\u5BA2\u6237\u7AEF\u5728\u8BF7\u6C42\u670D\u52A1\u5668\u7684\u67D0\u9879\u670D\u52A1\uFF0C\u6B64\u65F6\u670D\u52A1\u5668\u54CD\u5E94\u8BE5\u670D\u52A1\u3002\u5728Linux\u7CFB\u7EDF\u4E2D\uFF0CIO\u590D\u7528\u4F7F\u7528select, poll\u548Cepoll\u6765\u5B9E\u73B0\u3002epoll\u6539\u8FDB\u4E86\u524D\u4E24\u8005\uFF0C\u66F4\u52A0\u9AD8\u6548\u3001\u6027\u80FD\u66F4\u597D\uFF0C\u662F\u76EE\u524D\u51E0\u4E4E\u6240\u6709\u9AD8\u5E76\u53D1\u670D\u52A1\u5668\u7684\u57FA\u77F3\u3002\u8BF7\u8BFB\u8005\u52A1\u5FC5\u5148\u638C\u63E1epoll\u7684\u539F\u7406\u518D\u8FDB\u884C\u7F16\u7801\u5F00\u53D1\u3002</p><blockquote><p>select, poll\u4E0Eepoll\u7684\u8BE6\u7EC6\u539F\u7406\u548C\u533A\u522B\u8BF7\u53C2\u8003\u300AUNIX\u7F51\u7EDC\u7F16\u7A0B\uFF1A\u53771\u300B\u7B2C\u4E8C\u90E8\u5206\u7B2C\u516D\u7AE0\uFF0C\u6E38\u53CC\u300ALinux\u9AD8\u6027\u80FD\u670D\u52A1\u5668\u7F16\u7A0B\u300B\u7B2C\u4E5D\u7AE0</p></blockquote><p>epoll\u4E3B\u8981\u7531\u4E09\u4E2A\u7CFB\u7EDF\u8C03\u7528\u7EC4\u6210\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">//int epfd = epoll_create(1024);  //\u53C2\u6570\u8868\u793A\u76D1\u542C\u4E8B\u4EF6\u7684\u5927\u5C0F\uFF0C\u5982\u8D85\u8FC7\u5185\u6838\u4F1A\u81EA\u52A8\u8C03\u6574\uFF0C\u5DF2\u7ECF\u88AB\u820D\u5F03\uFF0C\u65E0\u5B9E\u9645\u610F\u4E49\uFF0C\u4F20\u5165\u4E00\u4E2A\u5927\u4E8E0\u7684\u6570\u5373\u53EF</span>
<span class="token keyword">int</span> epfd <span class="token operator">=</span> <span class="token function">epoll_create1</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//\u53C2\u6570\u662F\u4E00\u4E2Aflag\uFF0C\u4E00\u822C\u8BBE\u4E3A0\uFF0C\u8BE6\u7EC6\u53C2\u8003man epoll</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u521B\u5EFA\u4E00\u4E2Aepoll\u6587\u4EF6\u63CF\u8FF0\u7B26\u5E76\u8FD4\u56DE\uFF0C\u5931\u8D25\u5219\u8FD4\u56DE-1\u3002</p><p>epoll\u76D1\u542C\u4E8B\u4EF6\u7684\u63CF\u8FF0\u7B26\u4F1A\u653E\u5728\u4E00\u9897\u7EA2\u9ED1\u6811\u4E0A\uFF0C\u6211\u4EEC\u5C06\u8981\u76D1\u542C\u7684IO\u53E3\u653E\u5165epoll\u7EA2\u9ED1\u6811\u4E2D\uFF0C\u5C31\u53EF\u4EE5\u76D1\u542C\u8BE5IO\u4E0A\u7684\u4E8B\u4EF6\u3002</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token function">epoll_ctl</span><span class="token punctuation">(</span>epfd<span class="token punctuation">,</span> EPOLL_CTL_ADD<span class="token punctuation">,</span> sockfd<span class="token punctuation">,</span> <span class="token operator">&amp;</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//\u6DFB\u52A0\u4E8B\u4EF6\u5230epoll</span>
<span class="token function">epoll_ctl</span><span class="token punctuation">(</span>epfd<span class="token punctuation">,</span> EPOLL_CTL_MOD<span class="token punctuation">,</span> sockfd<span class="token punctuation">,</span> <span class="token operator">&amp;</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//\u4FEE\u6539epoll\u7EA2\u9ED1\u6811\u4E0A\u7684\u4E8B\u4EF6</span>
<span class="token function">epoll_ctl</span><span class="token punctuation">(</span>epfd<span class="token punctuation">,</span> EPOLL_CTL_DEL<span class="token punctuation">,</span> sockfd<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//\u5220\u9664\u4E8B\u4EF6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2Dsockfd\u8868\u793A\u6211\u4EEC\u8981\u6DFB\u52A0\u7684IO\u6587\u4EF6\u63CF\u8FF0\u7B26\uFF0Cev\u662F\u4E00\u4E2Aepoll_event\u7ED3\u6784\u4F53\uFF0C\u5176\u4E2D\u7684events\u8868\u793A\u4E8B\u4EF6\uFF0C\u5982EPOLLIN\u7B49\uFF0Cdata\u662F\u4E00\u4E2A\u7528\u6237\u6570\u636Eunion:</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">typedef</span> <span class="token keyword">union</span> epoll_data <span class="token punctuation">{</span>
  <span class="token keyword">void</span> <span class="token operator">*</span>ptr<span class="token punctuation">;</span>
  <span class="token keyword">int</span> fd<span class="token punctuation">;</span>
  <span class="token keyword">uint32_t</span> u32<span class="token punctuation">;</span>
  <span class="token keyword">uint64_t</span> u64<span class="token punctuation">;</span>
<span class="token punctuation">}</span> epoll_data_t<span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">epoll_event</span> <span class="token punctuation">{</span>
  <span class="token keyword">uint32_t</span> events<span class="token punctuation">;</span>	<span class="token comment">/* Epoll events */</span>
  epoll_data_t data<span class="token punctuation">;</span>	<span class="token comment">/* User data variable */</span>
<span class="token punctuation">}</span> __EPOLL_PACKED<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>epoll\u9ED8\u8BA4\u91C7\u7528LT\u89E6\u53D1\u6A21\u5F0F\uFF0C\u5373\u6C34\u5E73\u89E6\u53D1\uFF0C\u53EA\u8981fd\u4E0A\u6709\u4E8B\u4EF6\uFF0C\u5C31\u4F1A\u4E00\u76F4\u901A\u77E5\u5185\u6838\u3002\u8FD9\u6837\u53EF\u4EE5\u4FDD\u8BC1\u6240\u6709\u4E8B\u4EF6\u90FD\u5F97\u5230\u5904\u7406\u3001\u4E0D\u5BB9\u6613\u4E22\u5931\uFF0C\u4F46\u53EF\u80FD\u53D1\u751F\u7684\u5927\u91CF\u91CD\u590D\u901A\u77E5\u4E5F\u4F1A\u5F71\u54CDepoll\u7684\u6027\u80FD\u3002\u5982\u4F7F\u7528ET\u6A21\u5F0F\uFF0C\u5373\u8FB9\u7F18\u89E6\u6CD5\uFF0Cfd\u4ECE\u65E0\u4E8B\u4EF6\u5230\u6709\u4E8B\u4EF6\u7684\u53D8\u5316\u4F1A\u901A\u77E5\u5185\u6838\u4E00\u6B21\uFF0C\u4E4B\u540E\u5C31\u4E0D\u4F1A\u518D\u6B21\u901A\u77E5\u5185\u6838\u3002\u8FD9\u79CD\u65B9\u5F0F\u5341\u5206\u9AD8\u6548\uFF0C\u53EF\u4EE5\u5927\u5927\u63D0\u9AD8\u652F\u6301\u7684\u5E76\u53D1\u5EA6\uFF0C\u4F46\u7A0B\u5E8F\u903B\u8F91\u5FC5\u987B\u4E00\u6B21\u6027\u5F88\u597D\u5730\u5904\u7406\u8BE5fd\u4E0A\u7684\u4E8B\u4EF6\uFF0C\u7F16\u7A0B\u6BD4LT\u66F4\u7E41\u7410\u3002\u6CE8\u610FET\u6A21\u5F0F\u5FC5\u987B\u642D\u914D\u975E\u963B\u585E\u5F0Fsocket\u4F7F\u7528\u3002</p><blockquote><p>\u975E\u963B\u585E\u5F0Fsocket\u548C\u963B\u585E\u5F0F\u6709\u5F88\u5927\u7684\u4E0D\u540C\uFF0C\u8BF7\u53C2\u8003\u300AUNIX\u7F51\u7EDC\u7F16\u7A0B\uFF1A\u53771\u300B\u7B2C\u4E09\u90E8\u5206\u7B2C16\u7AE0\u3002</p></blockquote><p>\u6211\u4EEC\u53EF\u4EE5\u968F\u65F6\u4F7F\u7528<code>epoll_wait</code>\u83B7\u53D6\u6709\u4E8B\u4EF6\u53D1\u751F\u7684fd\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> nfds <span class="token operator">=</span> <span class="token function">epoll_wait</span><span class="token punctuation">(</span>epfd<span class="token punctuation">,</span> events<span class="token punctuation">,</span> maxevents<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5176\u4E2Devents\u662F\u4E00\u4E2Aepoll_event\u7ED3\u6784\u4F53\u6570\u7EC4\uFF0Cmaxevents\u662F\u53EF\u4F9B\u8FD4\u56DE\u7684\u6700\u5927\u4E8B\u4EF6\u5927\u5C0F\uFF0C\u4E00\u822C\u662Fevents\u7684\u5927\u5C0F\uFF0Ctimeout\u8868\u793A\u6700\u5927\u7B49\u5F85\u65F6\u95F4\uFF0C\u8BBE\u7F6E\u4E3A-1\u8868\u793A\u4E00\u76F4\u7B49\u5F85\u3002</p><p>\u63A5\u4E0B\u6765\u5C06day02\u7684\u670D\u52A1\u5668\u6539\u5199\u6210epoll\u7248\u672C\uFF0C\u57FA\u672C\u601D\u60F3\u4E3A\uFF1A\u5728\u521B\u5EFA\u4E86\u670D\u52A1\u5668socket fd\u540E\uFF0C\u5C06\u8FD9\u4E2Afd\u6DFB\u52A0\u5230epoll\uFF0C\u53EA\u8981\u8FD9\u4E2Afd\u4E0A\u53D1\u751F\u53EF\u8BFB\u4E8B\u4EF6\uFF0C\u8868\u793A\u6709\u4E00\u4E2A\u65B0\u7684\u5BA2\u6237\u7AEF\u8FDE\u63A5\u3002\u7136\u540Eaccept\u8FD9\u4E2A\u5BA2\u6237\u7AEF\u5E76\u5C06\u5BA2\u6237\u7AEF\u7684socket fd\u6DFB\u52A0\u5230epoll\uFF0Cepoll\u4F1A\u76D1\u542C\u5BA2\u6237\u7AEFsocket fd\u662F\u5426\u6709\u4E8B\u4EF6\u53D1\u751F\uFF0C\u5982\u679C\u53D1\u751F\u5219\u5904\u7406\u4E8B\u4EF6\u3002</p><p>\u63A5\u4E0B\u6765\u7684\u6559\u7A0B\u5728\u4F2A\u4EE3\u7801\u4E2D\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//\u521B\u5EFA\u670D\u52A1\u5668socket fd</span>
<span class="token function">bind</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">listen</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> epfd <span class="token operator">=</span> <span class="token function">epoll_create1</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">epoll_event</span> events<span class="token punctuation">[</span>MAX_EVENTS<span class="token punctuation">]</span><span class="token punctuation">,</span> ev<span class="token punctuation">;</span>
ev<span class="token punctuation">.</span>events <span class="token operator">=</span> EPOLLIN<span class="token punctuation">;</span>    <span class="token comment">//\u5728\u4EE3\u7801\u4E2D\u4F7F\u7528\u4E86ET\u6A21\u5F0F\uFF0C\u4E14\u672A\u5904\u7406\u9519\u8BEF\uFF0C\u5728day12\u8FDB\u884C\u4E86\u4FEE\u590D\uFF0C\u5B9E\u9645\u4E0A\u63A5\u53D7\u8FDE\u63A5\u6700\u597D\u4E0D\u8981\u7528ET\u6A21\u5F0F</span>
ev<span class="token punctuation">.</span>data<span class="token punctuation">.</span>fd <span class="token operator">=</span> sockfd<span class="token punctuation">;</span>    <span class="token comment">//\u8BE5IO\u53E3\u4E3A\u670D\u52A1\u5668socket fd</span>
<span class="token function">epoll_ctl</span><span class="token punctuation">(</span>epfd<span class="token punctuation">,</span> EPOLL_CTL_ADD<span class="token punctuation">,</span> sockfd<span class="token punctuation">,</span> <span class="token operator">&amp;</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//\u5C06\u670D\u52A1\u5668socket fd\u6DFB\u52A0\u5230epoll</span>
<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">// \u4E0D\u65AD\u76D1\u542Cepoll\u4E0A\u7684\u4E8B\u4EF6\u5E76\u5904\u7406</span>
    <span class="token keyword">int</span> nfds <span class="token operator">=</span> <span class="token function">epoll_wait</span><span class="token punctuation">(</span>epfd<span class="token punctuation">,</span> events<span class="token punctuation">,</span> MAX_EVENTS<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//\u6709nfds\u4E2Afd\u53D1\u751F\u4E8B\u4EF6</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nfds<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">//\u5904\u7406\u8FD9nfds\u4E2A\u4E8B\u4EF6</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>events<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>fd <span class="token operator">==</span> sockfd<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//\u53D1\u751F\u4E8B\u4EF6\u7684fd\u662F\u670D\u52A1\u5668socket fd\uFF0C\u8868\u793A\u6709\u65B0\u5BA2\u6237\u7AEF\u8FDE\u63A5</span>
            <span class="token keyword">int</span> clnt_sockfd <span class="token operator">=</span> <span class="token function">accept</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> <span class="token punctuation">(</span>sockaddr<span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>clnt_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>clnt_addr_len<span class="token punctuation">)</span><span class="token punctuation">;</span>
            ev<span class="token punctuation">.</span>data<span class="token punctuation">.</span>fd <span class="token operator">=</span> clnt_sockfd<span class="token punctuation">;</span>   
            ev<span class="token punctuation">.</span>events <span class="token operator">=</span> EPOLLIN <span class="token operator">|</span> EPOLLET<span class="token punctuation">;</span>  <span class="token comment">//\u5BF9\u4E8E\u5BA2\u6237\u7AEF\u8FDE\u63A5\uFF0C\u4F7F\u7528ET\u6A21\u5F0F\uFF0C\u53EF\u4EE5\u8BA9epoll\u66F4\u52A0\u9AD8\u6548\uFF0C\u652F\u6301\u66F4\u591A\u5E76\u53D1</span>
            <span class="token function">setnonblocking</span><span class="token punctuation">(</span>clnt_sockfd<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//ET\u9700\u8981\u642D\u914D\u975E\u963B\u585E\u5F0Fsocket\u4F7F\u7528</span>
            <span class="token function">epoll_ctl</span><span class="token punctuation">(</span>epfd<span class="token punctuation">,</span> EPOLL_CTL_ADD<span class="token punctuation">,</span> clnt_sockfd<span class="token punctuation">,</span> <span class="token operator">&amp;</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//\u5C06\u8BE5\u5BA2\u6237\u7AEF\u7684socket fd\u6DFB\u52A0\u5230epoll</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>events<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>events <span class="token operator">&amp;</span> EPOLLIN<span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token comment">//\u53D1\u751F\u4E8B\u4EF6\u7684\u662F\u5BA2\u6237\u7AEF\uFF0C\u5E76\u4E14\u662F\u53EF\u8BFB\u4E8B\u4EF6\uFF08EPOLLIN\uFF09</span>
            <span class="token function">handleEvent</span><span class="token punctuation">(</span>events<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//\u5904\u7406\u8BE5fd\u4E0A\u53D1\u751F\u7684\u4E8B\u4EF6</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E00\u4E2A\u975E\u963B\u585E\u5F0Fsocket fd\u4E0A\u8BFB\u53D6\u6570\u636E\u65F6\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//\u7531\u4E8E\u4F7F\u7528\u975E\u963B\u585EIO\uFF0C\u9700\u8981\u4E0D\u65AD\u8BFB\u53D6\uFF0C\u76F4\u5230\u5168\u90E8\u8BFB\u53D6\u5B8C\u6BD5</span>
    ssize_t bytes_read <span class="token operator">=</span> <span class="token function">read</span><span class="token punctuation">(</span>events<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>fd<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>bytes_read <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">//\u4FDD\u5B58\u8BFB\u53D6\u5230\u7684bytes_read\u5927\u5C0F\u7684\u6570\u636E</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>bytes_read <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> errno <span class="token operator">==</span> EINTR<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">//\u5BA2\u6237\u7AEF\u6B63\u5E38\u4E2D\u65AD\u3001\u7EE7\u7EED\u8BFB\u53D6</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>bytes_read <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>errno <span class="token operator">==</span> EAGAIN<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>errno <span class="token operator">==</span> EWOULDBLOCK<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//\u975E\u963B\u585EIO\uFF0C\u8FD9\u4E2A\u6761\u4EF6\u8868\u793A\u6570\u636E\u5168\u90E8\u8BFB\u53D6\u5B8C\u6BD5</span>
        <span class="token comment">//\u8BE5fd\u4E0A\u6570\u636E\u8BFB\u53D6\u5B8C\u6BD5</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>bytes_read <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">//EOF\u4E8B\u4EF6\uFF0C\u4E00\u822C\u8868\u793A\u5BA2\u6237\u7AEF\u65AD\u5F00\u8FDE\u63A5</span>
        <span class="token function">close</span><span class="token punctuation">(</span>events<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//\u5173\u95EDsocket\u4F1A\u81EA\u52A8\u5C06\u6587\u4EF6\u63CF\u8FF0\u7B26\u4ECEepoll\u6811\u4E0A\u79FB\u9664</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token comment">//\u5269\u4E0B\u7684bytes_read == -1\u7684\u60C5\u51B5\u8868\u793A\u5176\u4ED6\u9519\u8BEF\uFF0C\u8FD9\u91CC\u6CA1\u6709\u5904\u7406</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u81F3\u6B64\uFF0Cday03\u7684\u4E3B\u8981\u6559\u7A0B\u5DF2\u7ECF\u7ED3\u675F\u4E86\uFF0C\u5B8C\u6574\u6E90\u4EE3\u7801\u8BF7\u5728<code>code/day03</code>\u6587\u4EF6\u5939\uFF0C\u63A5\u4E0B\u6765\u770B\u770B\u4ECA\u5929\u7684\u5B66\u4E60\u6210\u679C\u4EE5\u53CA\u6D4B\u8BD5\u6211\u4EEC\u7684\u670D\u52A1\u5668\uFF01</p><p>\u8FDB\u5165<code>code/day03</code>\u6587\u4EF6\u5939\uFF0C\u4F7F\u7528make\u547D\u4EE4\u7F16\u8BD1\uFF0C\u5C06\u4F1A\u5F97\u5230<code>server</code>\u548C<code>client</code>\uFF0C\u8F93\u5165\u547D\u4EE4<code>./server</code>\u5F00\u59CB\u8FD0\u884C\u670D\u52A1\u5668\u3002\u7136\u540E\u5728\u4E00\u4E2A\u65B0\u7EC8\u7AEF\u8F93\u5165\u547D\u4EE4<code>./client</code>\u8FD0\u884C\u5BA2\u6237\u7AEF\uFF0C\u53EF\u4EE5\u770B\u5230\u670D\u52A1\u5668\u63A5\u6536\u5230\u4E86\u5BA2\u6237\u7AEF\u7684\u8FDE\u63A5\u8BF7\u6C42\uFF0C\u5E76\u6210\u529F\u8FDE\u63A5\u3002\u518D\u65B0\u5F00\u4E00\u4E2A\u6216\u591A\u4E2A\u7EC8\u7AEF\uFF0C\u8FD0\u884Cclient\uFF0C\u53EF\u4EE5\u770B\u5230\u8FD9\u4E9B\u5BA2\u6237\u7AEF\u4E5F\u540C\u65F6\u8FDE\u63A5\u5230\u4E86\u670D\u52A1\u5668\u3002\u6B64\u65F6\u6211\u4EEC\u5728\u4EFB\u610F\u4E00\u4E2Aclient\u8F93\u5165\u4E00\u6761\u4FE1\u606F\uFF0C\u670D\u52A1\u5668\u90FD\u663E\u793A\u5E76\u53D1\u9001\u5230\u8BE5\u5BA2\u6237\u7AEF\u3002\u5982\u4F7F\u7528<code>control+c</code>\u7EC8\u6B62\u6389\u67D0\u4E2Aclient\uFF0C\u670D\u52A1\u5668\u56DE\u663E\u793A\u8FD9\u4E2Aclient\u5DF2\u7ECF\u65AD\u5F00\u8FDE\u63A5\uFF0C\u4F46\u5176\u4ED6client\u5E76\u4E0D\u53D7\u5F71\u54CD\u3002</p><p>\u81F3\u6B64\uFF0C\u6211\u4EEC\u5DF2\u7ECF\u5B8C\u6574\u5730\u5F00\u53D1\u4E86\u4E00\u4E2Aecho\u670D\u52A1\u5668\uFF0C\u5E76\u4E14\u652F\u6301\u591A\u4E2A\u5BA2\u6237\u7AEF\u540C\u65F6\u8FDE\u63A5\uFF0C\u4E3A\u4ED6\u4EEC\u63D0\u4F9B\u670D\u52A1\uFF01</p>`,25),k=s("\u5B8C\u6574\u6E90\u4EE3\u7801\uFF1A"),d={href:"https://github.com/yuesong-feng/30dayMakeCppServer/tree/main/code/day03",target:"_blank",rel:"noopener noreferrer"},r=s("https://github.com/yuesong-feng/30dayMakeCppServer/tree/main/code/day03");function v(m,b){const a=l("ExternalLinkIcon");return t(),e("div",null,[i,n("p",null,[k,n("a",d,[r,o(a)])])])}const _=p(u,[["render",v],["__file","day03-\u9AD8\u5E76\u53D1\u8FD8\u5F97\u7528epoll.html.vue"]]);export{_ as default};
