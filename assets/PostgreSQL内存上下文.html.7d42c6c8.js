import{_ as n,o as s,c as a,a as t}from"../app.dbff23ac.mjs";const e={},o=t(`<h1 id="postgresql\u5185\u5B58\u4E0A\u4E0B\u6587" tabindex="-1"><a class="header-anchor" href="#postgresql\u5185\u5B58\u4E0A\u4E0B\u6587" aria-hidden="true">#</a> PostgreSQL\u5185\u5B58\u4E0A\u4E0B\u6587</h1><p>\u4E0D\u7BA1\u662F\u4EC0\u4E48\u6837\u7684\u6570\u636E\u5E93\u7CFB\u7EDF\uFF0C\u5B58\u50A8\u7BA1\u7406\u7684\u672C\u8D28\u90FD\u662F\u4E00\u6837\u7684\uFF1A\u5982\u4F55\u51CF\u5C11I/O\u6B21\u6570\u3002\u5185\u5B58\u7684\u8BBF\u95EE\u901F\u5EA6\u81F3\u5C11\u662F\u78C1\u76D8\u7684\u6570\u5341\u4E07\u500D\uFF0C\u6240\u4EE5\u901A\u5E38\u8BFB\u5199\u78C1\u76D8\u6240\u7528\u7684\u65F6\u95F4\u51B3\u5B9A\u4E86\u6570\u636E\u5E93\u64CD\u4F5C\u7684\u603B\u65F6\u95F4\uFF0C\u800C\u5185\u5B58\u7684\u8BBF\u95EE\u65F6\u95F4\u53EF\u4EE5\u5FFD\u7565\u4E0D\u8BA1\u3002\u56E0\u6B64\uFF0C\u8981\u5C3D\u53EF\u80FD\u7684\u63D0\u9AD8I/O\u547D\u4E2D\u7387\uFF0C\u8BA9\u6700\u53EF\u80FD\u88AB\u4F7F\u7528\u7684\u6587\u4EF6\u5757\u505C\u7559\u5728\u5185\u5B58\u4E2D\u3002\u9664\u6B64\u4E4B\u5916\uFF0C\u5185\u5B58\u7BA1\u7406\u8FD8\u662F\u6574\u4E2A\u6570\u636E\u5E93\u7CFB\u7EDF\u7684\u6865\u6881\uFF0C\u6BCF\u4E00\u4E2A\u6A21\u5757\u90FD\u4F1A\u4F7F\u7528\u5230\u5185\u5B58\u8FDB\u884C\u51FD\u6570\u8FD0\u884C\u3001\u7F13\u51B2\u3001\u6D88\u606F\u4F20\u9012\u7B49\uFF0C\u5185\u5B58\u7BA1\u7406\u5BF9\u4E8E\u6570\u636E\u5E93\u6765\u8BF4\u5341\u5206\u91CD\u8981\u3002</p><p>PostgreSQL7.1\u4E4B\u524D\uFF0C\u5927\u91CF\u4EE5\u6307\u9488\u4F20\u503C\u7684\u67E5\u8BE2\u53EF\u80FD\u4F1A\u9020\u6210\u4E25\u91CD\u3001\u4E0D\u6613\u6392\u67E5\u7684\u5185\u5B58\u6CC4\u6F0F\u3002\u4ECE7.1\u7248\u672C\u5F00\u59CB\uFF0CPostgreSQL\u4F7F\u7528\u5185\u5B58\u4E0A\u4E0B\u6587\u673A\u5236\u6765\u7BA1\u7406\u5185\u5B58\u3002\u4E00\u4E2A\u5185\u5B58\u4E0A\u4E0B\u6587\u5C31\u76F8\u5F53\u4E8E\u4E00\u4E2A\u8FDB\u7A0B\u7684\u5185\u5B58\u73AF\u5883\uFF0C\u6BCF\u4E2A\u8FDB\u7A0B\u7684\u5185\u5B58\u4E0A\u4E0B\u6587\u7EC4\u6210\u4E00\u4E2A\u6811\u884C\u7ED3\u6784\uFF0C\u5176\u6839\u8282\u70B9\u4E3A<code>TopMemoryContext</code>\uFF0C\u4E0B\u9762\u53EF\u4EE5\u6709\u5F88\u591A\u5B57\u8282\u70B9\uFF0C\u5982\u7528\u4E8E\u7BA1\u7406Cache\u7684<code>CacheMemoryContext</code>\u3001\u7528\u4E8E\u9519\u8BEF\u5904\u7406\u7684<code>ErrorContext</code>\u3001\u7528\u4E8E\u6D88\u606F\u4F20\u9012\u7684<code>MessageMemoryContext</code>\u7B49\uFF0C\u6BCF\u4E2A\u5B50\u8282\u70B9\u53C8\u53EF\u4EE5\u6709\u81EA\u5DF1\u7684\u5B50\u8282\u70B9\u3002\u901A\u8FC7\u6811\u5F62\u7ED3\u6784\u53EF\u4EE5\u8DDF\u8E2A\u8FDB\u7A0B\u4E2D\u5185\u5B58\u4E0A\u4E0B\u6587\u7684\u521B\u5EFA\u548C\u4F7F\u7528\u60C5\u51B5\uFF0C\u6BCF\u4E2A\u8282\u70B9\u5B9A\u4E49\u5982\u4E0B\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">MemoryContextData</span>
<span class="token punctuation">{</span>
	NodeTag		type<span class="token punctuation">;</span>			<span class="token comment">/* \u8282\u70B9\u7C7B\u578B */</span>
    <span class="token comment">/* \u4EE5\u4E0B\u4E24\u4E2A\u5B57\u6BB5\u653E\u5728\u8FD9\u91CC\u53EF\u4EE5\u51CF\u5C0F\u5B57\u8282\u5BF9\u9F50\u7684\u6D6A\u8D39\uFF1A */</span>
    bool		isReset<span class="token punctuation">;</span>		<span class="token comment">/* \u4E3A\u771F\u8868\u793A\u4ECE\u4E0A\u6B21reset\u540E\u6CA1\u6709\u5206\u914D\u8FC7\u5185\u5B58\u7A7A\u95F4 */</span>
	bool		allowInCritSection<span class="token punctuation">;</span> <span class="token comment">/* \u5141\u8BB8\u5728critical section\uFF08\u4E34\u754C\u533A\uFF09\u4F7F\u7528palloc */</span>
	Size		mem_allocated<span class="token punctuation">;</span>	<span class="token comment">/* \u8BE5\u5185\u5B58\u4E0A\u4E0B\u6587\u4E2D\u5DF2\u7ECF\u5206\u914D\u7684\u5185\u5B58\u5927\u5C0F */</span>
	<span class="token keyword">const</span> MemoryContextMethods <span class="token operator">*</span>methods<span class="token punctuation">;</span>	<span class="token comment">/* \u5185\u5B58\u5904\u7406\u51FD\u6570\u7684\u6307\u9488 */</span>
	MemoryContext parent<span class="token punctuation">;</span>		<span class="token comment">/* \u7236\u8282\u70B9 */</span>
	MemoryContext firstchild<span class="token punctuation">;</span>	<span class="token comment">/* \u7B2C\u4E00\u4E2A\u5B69\u5B50\u8282\u70B9 */</span>
	MemoryContext prevchild<span class="token punctuation">;</span>	<span class="token comment">/* \u524D\u4E00\u4E2A\u5144\u5F1F\u8282\u70B9 */</span>
	MemoryContext nextchild<span class="token punctuation">;</span>	<span class="token comment">/* \u540E\u4E00\u4E2A\u5144\u5F1F\u8282\u70B9 */</span>
	<span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">;</span>			<span class="token comment">/* \u5185\u5B58\u4E0A\u4E0B\u6587\u7684\u540D\u79F0(\u7528\u4E8E\u8C03\u8BD5) */</span>
	<span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>ident<span class="token punctuation">;</span>			<span class="token comment">/* \u5185\u5B58\u4E0A\u4E0B\u6587\u7684id (\u7528\u4E8E\u8C03\u8BD5) */</span>
	MemoryContextCallback <span class="token operator">*</span>reset_cbs<span class="token punctuation">;</span>	<span class="token comment">/* reset/delete \u56DE\u8C03\u51FD\u6570\u7684\u94FE\u8868 */</span>
<span class="token punctuation">}</span> MemoryContextData<span class="token punctuation">;</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">MemoryContextData</span> <span class="token operator">*</span>MemoryContext<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4EFB\u4F55\u65F6\u5019\u90FD\u6709\u4E00\u4E2A\u5F53\u524D\u7684\u5185\u5B58\u4E0A\u4E0B\u6587\uFF0C\u8BB0\u5F55\u5728\u5168\u5C40\u53D8\u91CF<code>CurrentMemoryContext</code>\u91CC\uFF0C\u8FDB\u7A0B\u5728\u8FD9\u4E2A\u5185\u5B58\u4E0A\u4E0B\u6587\u4E2D\u8C03\u7528palloc\u51FD\u6570\u6765\u5206\u914D\u5185\u5B58\u3002\u5728\u53D8\u5316\u5185\u5B58\u4E0A\u4E0B\u6587\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528<code>MemoryContextSwitchTo</code>\u5207\u6362\u3002</p><p><code>MemoryContext</code>\u4E2D\u7684<code>methods</code>\u5B57\u6BB5\u662F\u4E00\u7CFB\u5217\u5305\u542B\u4E86\u5BF9\u5185\u5B58\u4E0A\u4E0B\u6587\u8FDB\u884C\u64CD\u4F5C\u7684\u51FD\u6570\uFF0C\u4F7F\u7528\u51FD\u6570\u6307\u9488\u6A21\u62DF\u865A\u51FD\u6570\u8BBE\u8BA1\uFF0C\u53EF\u4EE5\u6709\u4E0D\u540C\u7684\u5B9E\u73B0\uFF0C\u5B9A\u4E49\u5982\u4E0B\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">MemoryContextMethods</span>
<span class="token punctuation">{</span>
	<span class="token keyword">void</span>	   <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span>alloc<span class="token punctuation">)</span> <span class="token punctuation">(</span>MemoryContext context<span class="token punctuation">,</span> Size size<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// \u5206\u914D\u5185\u5B58</span>
	<span class="token keyword">void</span>		<span class="token punctuation">(</span><span class="token operator">*</span>free_p<span class="token punctuation">)</span> <span class="token punctuation">(</span>MemoryContext context<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>pointer<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// \u91CA\u653E\u5185\u5B58</span>
	<span class="token keyword">void</span>	   <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span>realloc<span class="token punctuation">)</span> <span class="token punctuation">(</span>MemoryContext context<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>pointer<span class="token punctuation">,</span> Size size<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// \u91CD\u5206\u914D\u5185\u5B58</span>
	<span class="token keyword">void</span>		<span class="token punctuation">(</span><span class="token operator">*</span>reset<span class="token punctuation">)</span> <span class="token punctuation">(</span>MemoryContext context<span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token comment">// \u91CD\u7F6E\u5185\u5B58\u4E0A\u4E0B\u6587</span>
	<span class="token keyword">void</span>		<span class="token punctuation">(</span><span class="token operator">*</span>delete_context<span class="token punctuation">)</span> <span class="token punctuation">(</span>MemoryContext context<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment">// \u5220\u9664\u5185\u5B58\u4E0A\u4E0B\u6587</span>
	<span class="token function">Size</span>		<span class="token punctuation">(</span><span class="token operator">*</span>get_chunk_space<span class="token punctuation">)</span> <span class="token punctuation">(</span>MemoryContext context<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>pointer<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u68C0\u67E5\u5185\u5B58\u7247\u6BB5\u7684\u5927\u5C0F</span>
	<span class="token function">bool</span>		<span class="token punctuation">(</span><span class="token operator">*</span>is_empty<span class="token punctuation">)</span> <span class="token punctuation">(</span>MemoryContext context<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment">// \u68C0\u67E5\u5185\u5B58\u4E0A\u4E0B\u6587\u662F\u5426\u4E3A\u7A7A</span>
	<span class="token keyword">void</span>		<span class="token punctuation">(</span><span class="token operator">*</span>stats<span class="token punctuation">)</span> <span class="token punctuation">(</span>MemoryContext context<span class="token punctuation">,</span>                            <span class="token comment">// \u5185\u5B58\u4E0A\u4E0B\u6587\u72B6\u6001</span>
						  MemoryStatsPrintFunc printfunc<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>passthru<span class="token punctuation">,</span>
						  MemoryContextCounters <span class="token operator">*</span>totals<span class="token punctuation">,</span>
						  bool print_to_stderr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">MEMORY_CONTEXT_CHECKING</span></span>
	<span class="token keyword">void</span>		<span class="token punctuation">(</span><span class="token operator">*</span>check<span class="token punctuation">)</span> <span class="token punctuation">(</span>MemoryContext context<span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment">// \u68C0\u67E5\u6240\u6709\u5185\u5B58\u7247\u6BB5</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
<span class="token punctuation">}</span> MemoryContextMethods<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>MemoryContext</code>\u5E76\u4E0D\u7BA1\u7406\u5B9E\u9645\u7684\u5185\u5B58\u5757\uFF0C\u4EC5\u4EC5\u4F5C\u4E3A\u4E00\u4E2A\u5934\u90E8\u8BB0\u5F55\u5728<code>AllocSetContext</code>\u7ED3\u6784\u91CC\uFF0C\u6765\u7BA1\u7406\u5185\u5B58\u4E0A\u4E0B\u6587\u4E4B\u95F4\u7684\u6811\u5F62\u5173\u7CFB\uFF0C\u771F\u6B63\u62E5\u6709\u5E76\u7BA1\u7406\u5185\u5B58\u5757\u7684\u662F<code>AllocSet</code>\uFF0C\u5B9A\u4E49\u5982\u4E0B\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">AllocSetContext</span>
<span class="token punctuation">{</span>
	MemoryContextData header<span class="token punctuation">;</span>	<span class="token comment">/* \u5185\u5B58\u4E0A\u4E0B\u6587\u5934\u90E8 */</span>
	<span class="token comment">/* \u6B64\u4E0A\u4E0B\u6587\u4E2D\u5206\u914D\u7684\u5185\u5B58\u4FE1\u606F\uFF1A */</span>
	AllocBlock	blocks<span class="token punctuation">;</span>			<span class="token comment">/* \u5185\u5B58\u5757\u94FE\u8868 */</span>
	AllocChunk	freelist<span class="token punctuation">[</span>ALLOCSET_NUM_FREELISTS<span class="token punctuation">]</span><span class="token punctuation">;</span>	<span class="token comment">/* \u7A7A\u95F2\u5185\u5B58\u7247\u6570\u7EC4 */</span>
	<span class="token comment">/* \u6B64\u4E0A\u4E0B\u6587\u5206\u914D\u5185\u5B58\u76F8\u5173\u53C2\u6570\uFF1A */</span>
	Size		initBlockSize<span class="token punctuation">;</span>	<span class="token comment">/* \u521D\u59CB\u5185\u5B58\u5757\u5927\u5C0F */</span>
	Size		maxBlockSize<span class="token punctuation">;</span>	<span class="token comment">/* \u6700\u5927\u5185\u5B58\u5757\u5927\u5C0F */</span>
	Size		nextBlockSize<span class="token punctuation">;</span>	<span class="token comment">/* \u4E0B\u4E00\u4E2A\u8981\u5206\u914D\u7684\u5185\u5B58\u5757\u5927\u5C0F */</span>
	Size		allocChunkLimit<span class="token punctuation">;</span>	<span class="token comment">/* \u5206\u914D\u5185\u5B58\u7247\u7684\u5927\u5C0F\u9600\u503C */</span>
	AllocBlock	keeper<span class="token punctuation">;</span>			<span class="token comment">/* \u4FDD\u5B58\u5728keeper\u4E2D\u7684\u5185\u5B58\u5757\u5728\u5185\u5B58\u4E0A\u4E0B\u6587\u91CD\u503C\u65F6\u4F1A\u88AB\u4FDD\u7559\u4E0D\u91CA\u653E */</span>
	<span class="token keyword">int</span>			freeListIndex<span class="token punctuation">;</span>	<span class="token comment">/* \u6B64\u4E0A\u4E0B\u6587\u5728\u7A7A\u95F2\u4E0A\u4E0B\u6587\u6570\u7EC4\u4E2D\u7684\u4F4D\u7F6E\uFF0C\u4E0D\u5728\u5373\u4E3A-1 */</span>
<span class="token punctuation">}</span> AllocSetContext<span class="token punctuation">;</span>
<span class="token keyword">typedef</span> AllocSetContext <span class="token operator">*</span>AllocSet<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>AllocSet</code>\u6240\u7BA1\u7406\u7684\u5185\u5B58\u533A\u57DF\u88AB\u5206\u6210\u82E5\u5E72\u4E2A\u5185\u5B58\u5757\uFF08AllocBlock\uFF09\uFF0C\u901A\u8FC7\u6807\u51C6\u5E93\u51FD\u6570<code>malloc</code>\u8FDB\u884C\u5206\u914D\uFF0C\u5F62\u6210\u4E00\u4E2A\u94FE\u8868\uFF0C<code>blocks</code>\u5B57\u6BB5\u6307\u5411\u8FD9\u4E2A\u5185\u5B58\u5757\u94FE\u8868\u7684\u5934\u90E8\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">AllocBlockData</span>
<span class="token punctuation">{</span>
	AllocSet	aset<span class="token punctuation">;</span>			<span class="token comment">/* \u8BE5\u5185\u5B58\u5757\u6240\u5728\u7684AllocSet */</span>
	AllocBlock	prev<span class="token punctuation">;</span>			<span class="token comment">/* \u4E0A\u4E00\u4E2A\u5185\u5B58\u5757\u7684\u5730\u5740 */</span>
	AllocBlock	next<span class="token punctuation">;</span>			<span class="token comment">/* \u4E0B\u4E00\u4E2A\u5185\u5B58\u5757\u7684\u5730\u5740 */</span>
	<span class="token keyword">char</span>	   <span class="token operator">*</span>freeptr<span class="token punctuation">;</span>		<span class="token comment">/* \u8BE5\u5185\u5B58\u5757\u7A7A\u95F2\u533A\u57DF\u7684\u9996\u5730\u5740 */</span>
	<span class="token keyword">char</span>	   <span class="token operator">*</span>endptr<span class="token punctuation">;</span>			<span class="token comment">/* \u8BE5\u5185\u5B58\u5757\u7684\u672B\u5730\u5740 */</span>
<span class="token punctuation">}</span>			AllocBlockData<span class="token punctuation">;</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">AllocBlockData</span> <span class="token operator">*</span>AllocBlock<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u6BCF\u4E2A\u5185\u5B58\u5757\u4E2D\u53EF\u4EE5\u8FDB\u4E00\u6B65\u5206\u914D\u5185\u5B58\uFF0C\u4EA7\u751F\u7684\u5185\u5B58\u7247\u6BB5\u53EB\u505A\u5185\u5B58\u7247\uFF08AllocChunk\uFF09\uFF0C\u5305\u62EC\u4E00\u4E2A\u5934\u90E8\u548C\u6570\u636E\u533A\u57DF\uFF0C<code>AllocChunk</code>\u4E3A\u5185\u5B58\u7247\u7684\u5934\u90E8\uFF0C\u6570\u636E\u533A\u57DF\u5219\u7D27\u8DDF\u5728\u5934\u90E8\u4FE1\u606F\u4E4B\u540E\u5206\u914D\uFF0C\u901A\u8FC7<code>palloc</code>\u548C<code>pfree</code>\u51FD\u6570\u53EF\u4EE5\u5728\u5185\u5B58\u4E0A\u4E0B\u6587\u4E2D\u7533\u8BF7\u3001\u91CA\u653E\u5185\u5B58\u7247\uFF0C\u88AB\u91CA\u653E\u7684\u5185\u5B58\u7247\u5C06\u88AB\u52A0\u5165\u5230<code>freelist</code>\u4E2D\u4EE5\u5907\u91CD\u590D\u4F7F\u7528\uFF0C<code>AllocChunk</code>\u5B9A\u4E49\u5982\u4E0B\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">AllocChunkData</span>
<span class="token punctuation">{</span>
	<span class="token comment">/* \u5185\u5B58\u7247\u7684\u5B9E\u9645\u5927\u5C0F\uFF0C\u7531\u4E8E\u5185\u5B58\u7247\u90FD\u662F\u4EE52\u7684\u5E42\u4E3A\u5927\u5C0F\u8FDB\u884C\u5BF9\u9F50\uFF0C\u56E0\u6B64\u7533\u8BF7\u7684\u5927\u5C0F\u53EF\u80FD\u6BD4\u5B9E\u9645\u5927\u5C0F\u8981\u5C0F*/</span>
	Size		size<span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">MEMORY_CONTEXT_CHECKING</span></span>
	<span class="token comment">/* \u8C03\u8BD5\u5185\u5B58\u4F7F\u7528\u60C5\u51B5\u65F6\uFF0C\u5B58\u50A8\u5B9E\u9645\u7684\u88AB\u4F7F\u7528\u7684\u7A7A\u95F4\u5927\u5C0F\uFF0C\u5982\u679C\u662F\u7A7A\u95F2\u5185\u5B58\u7247\u5219\u4E3A0 */</span>
	Size		requested_size<span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ALLOCCHUNK_RAWSIZE</span>  <span class="token expression"><span class="token punctuation">(</span>SIZEOF_SIZE_T <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> SIZEOF_VOID_P<span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ALLOCCHUNK_RAWSIZE</span>  <span class="token expression"><span class="token punctuation">(</span>SIZEOF_SIZE_T <span class="token operator">+</span> SIZEOF_VOID_P<span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span>							<span class="token comment">/* MEMORY_CONTEXT_CHECKING */</span></span>

	<span class="token comment">/* \u5982\u679C\u9700\u8981\uFF0C\u786E\u4FDD\u5185\u5B58\u5BF9\u9F50 */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token punctuation">(</span>ALLOCCHUNK_RAWSIZE <span class="token operator">%</span> MAXIMUM_ALIGNOF<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span></span></span>
	<span class="token keyword">char</span>		padding<span class="token punctuation">[</span>MAXIMUM_ALIGNOF <span class="token operator">-</span> ALLOCCHUNK_RAWSIZE <span class="token operator">%</span> MAXIMUM_ALIGNOF<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

	<span class="token keyword">void</span>	   <span class="token operator">*</span>aset<span class="token punctuation">;</span>	<span class="token comment">// \u8BE5\u5185\u5B58\u7247\u6240\u5728\u7684AllocSet\uFF0C\u5982\u679C\u5185\u5B58\u7247\u4E3A\u7A7A\u95F2\uFF0C\u5219\u7528\u4E8E\u94FE\u63A5\u5176\u7A7A\u95F2\u94FE\u8868</span>
	<span class="token comment">// \u8BE5\u7ED3\u6784\u4F53\u540E\u4E0D\u80FD\u6709\u5185\u5B58\u5BF9\u9F50\uFF0C\u672C\u8EAB\u5E94\u8BE5\u662F\u5BF9\u9F50\u7684\uFF01</span>
<span class="token punctuation">}</span>		
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">AllocChunkData</span> <span class="token operator">*</span>AllocChunk<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),p=[o];function c(l,i){return s(),a("div",null,p)}const d=n(e,[["render",c],["__file","PostgreSQL\u5185\u5B58\u4E0A\u4E0B\u6587.html.vue"]]);export{d as default};
