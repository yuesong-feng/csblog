import{_ as t,o as p,c as e,b as n,d as o,a as c,e as s,r as u}from"../app.dbff23ac.mjs";const l={},i=c(`<h1 id="day02-\u4E0D\u8981\u653E\u8FC7\u4EFB\u4F55\u4E00\u4E2A\u9519\u8BEF" tabindex="-1"><a class="header-anchor" href="#day02-\u4E0D\u8981\u653E\u8FC7\u4EFB\u4F55\u4E00\u4E2A\u9519\u8BEF" aria-hidden="true">#</a> day02-\u4E0D\u8981\u653E\u8FC7\u4EFB\u4F55\u4E00\u4E2A\u9519\u8BEF</h1><p>\u5728\u4E0A\u4E00\u5929\uFF0C\u6211\u4EEC\u5199\u4E86\u4E00\u4E2A\u5BA2\u6237\u7AEF\u53D1\u8D77socket\u8FDE\u63A5\u548C\u4E00\u4E2A\u670D\u52A1\u5668\u63A5\u53D7socket\u8FDE\u63A5\u3002\u7136\u800C\u5BF9\u4E8E<code>socket</code>,<code>bind</code>,<code>listen</code>,<code>accept</code>,<code>connect</code>\u7B49\u51FD\u6570\uFF0C\u6211\u4EEC\u90FD\u8BBE\u60F3\u7A0B\u5E8F\u5B8C\u7F8E\u5730\u3001\u6CA1\u6709\u4EFB\u4F55\u5F02\u5E38\u5730\u8FD0\u884C\uFF0C\u800C\u8FD9\u663E\u7136\u662F\u4E0D\u53EF\u80FD\u7684\uFF0C\u4E0D\u7BA1\u5199\u4EE3\u7801\u6C34\u5E73\u591A\u9AD8\uFF0C\u5C31\u7B97\u4F60\u662F\u6797\u7EB3\u65AF\uFF0C\u4E5F\u4F1A\u5728\u7A0B\u5E8F\u91CC\u5199\u51FAbug\u3002</p><p>\u5728\u300AEffective C++\u300B\u4E2D\u6761\u6B3E08\u8BB2\u5230\uFF0C\u522B\u8BA9\u5F02\u5E38\u9003\u79BB\u6790\u6784\u51FD\u6570\u3002\u5728\u8FD9\u91CC\u6211\u62D3\u5C55\u4E00\u4E0B\uFF0C\u6211\u4EEC\u4E0D\u5E94\u8BE5\u653E\u8FC7\u6BCF\u4E00\u4E2A\u5F02\u5E38\uFF0C\u5426\u5219\u5728\u5927\u578B\u9879\u76EE\u5F00\u53D1\u4E2D\u4E00\u5B9A\u4F1A\u9047\u5230\u5F88\u96BE\u5B9A\u4F4D\u7684bug\uFF01</p><blockquote><p>\u5177\u4F53\u4FE1\u606F\u53EF\u4EE5\u53C2\u8003\u300AEffective C++\u300B\u539F\u4E66\u6761\u6B3E08\uFF0C\u8FD9\u91CC\u4E0D\u518D\u8D58\u8FF0\u3002</p></blockquote><p>\u5BF9\u4E8ELinux\u7CFB\u7EDF\u8C03\u7528\uFF0C\u5E38\u89C1\u7684\u9519\u8BEF\u63D0\u793A\u65B9\u5F0F\u662F\u4F7F\u7528\u8FD4\u56DE\u503C\u548C\u8BBE\u7F6Eerrno\u6765\u8BF4\u660E\u9519\u8BEF\u7C7B\u578B\u3002</p><blockquote><p>\u8BE6\u7EC6\u7684C++\u8BED\u8A00\u5F02\u5E38\u5904\u7406\u8BF7\u53C2\u8003\u300AC++ Primer\u300B\u7B2C\u4E94\u7248\u7B2C\u4E94\u7AE0\u7B2C\u516D\u8282</p></blockquote><p>\u901A\u5E38\u6765\u8BB2\uFF0C\u5F53\u4E00\u4E2A\u7CFB\u7EDF\u8C03\u7528\u8FD4\u56DE-1\uFF0C\u8BF4\u660E\u6709error\u53D1\u751F\u3002\u6211\u4EEC\u6765\u770B\u770Bsocket\u7F16\u7A0B\u6700\u5E38\u89C1\u7684\u9519\u8BEF\u5904\u7406\u6A21\u7248\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>AF_INET<span class="token punctuation">,</span> SOCK_STREAM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>sockfd <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;socket create error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">exit</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4E86\u5904\u7406\u4E00\u4E2A\u9519\u8BEF\uFF0C\u9700\u8981\u81F3\u5C11\u5360\u7528\u4E94\u884C\u4EE3\u7801\uFF0C\u8FD9\u4F7F\u7F16\u7A0B\u5341\u5206\u7E41\u7410\uFF0C\u7A0B\u5E8F\u4E5F\u4E0D\u597D\u770B\uFF0C\u5F02\u5E38\u5904\u7406\u6240\u5360\u7BC7\u5E45\u6BD4\u7A0B\u5E8F\u672C\u8EAB\u90FD\u591A\u3002</p><p>\u4E3A\u4E86\u65B9\u4FBF\u7F16\u7801\u4EE5\u53CA\u4EE3\u7801\u7684\u53EF\u8BFB\u6027\uFF0C\u53EF\u4EE5\u5C01\u88C5\u4E00\u4E2A\u9519\u8BEF\u5904\u7406\u51FD\u6570\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">errif</span><span class="token punctuation">(</span><span class="token keyword">bool</span> condition<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>errmsg<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>condition<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">perror</span><span class="token punctuation">(</span>errmsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u662F\u5426\u53D1\u751F\u9519\u8BEF\uFF0C\u5982\u679C\u4E3A\u771F\uFF0C\u5219\u8868\u793A\u6709\u9519\u8BEF\u53D1\u751F\uFF0C\u4F1A\u8C03\u7528<code>&lt;stdio.h&gt;</code>\u5934\u6587\u4EF6\u4E2D\u7684<code>perror</code>\uFF0C\u8FD9\u4E2A\u51FD\u6570\u4F1A\u6253\u5370\u51FA<code>errno</code>\u7684\u5B9E\u9645\u610F\u4E49\uFF0C\u8FD8\u4F1A\u6253\u5370\u51FA\u6211\u4EEC\u4F20\u5165\u7684\u5B57\u7B26\u4E32\uFF0C\u4E5F\u5C31\u662F\u7B2C\u51FD\u6570\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u8BA9\u6211\u4EEC\u5F88\u65B9\u4FBF\u5B9A\u4F4D\u5230\u7A0B\u5E8F\u51FA\u73B0\u9519\u8BEF\u7684\u5730\u65B9\u3002\u7136\u540E\u4F7F\u7528<code>&lt;stdlib.h&gt;</code>\u4E2D\u7684<code>exit</code>\u51FD\u6570\u8BA9\u7A0B\u5E8F\u9000\u51FA\u5E76\u8FD4\u56DE\u4E00\u4E2A\u9884\u5B9A\u4E49\u5E38\u91CF<code>EXIT_FAILURE</code>\u3002</p><p>\u5728\u4F7F\u7528\u7684\u65F6\u5019:</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>AF_INET<span class="token punctuation">,</span> SOCK_STREAM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">errif</span><span class="token punctuation">(</span>sockfd <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;socket create error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\u6211\u4EEC\u53EA\u9700\u8981\u4F7F\u7528\u4E00\u884C\u8FDB\u884C\u9519\u8BEF\u5904\u7406\uFF0C\u5199\u8D77\u6765\u65B9\u4FBF\u7B80\u5355\uFF0C\u4E5F\u8F93\u51FA\u4E86\u81EA\u5B9A\u4E49\u4FE1\u606F\uFF0C\u7528\u4E8E\u5B9A\u4F4Dbug\u3002</p><p>\u5BF9\u4E8E\u6240\u6709\u7684\u51FD\u6570\uFF0C\u6211\u4EEC\u90FD\u4F7F\u7528\u8FD9\u79CD\u65B9\u5F0F\u5904\u7406\u9519\u8BEF\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token function">errif</span><span class="token punctuation">(</span><span class="token function">bind</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> <span class="token punctuation">(</span>sockaddr<span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>serv_addr<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>serv_addr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;socket bind error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">errif</span><span class="token punctuation">(</span><span class="token function">listen</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> SOMAXCONN<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;socket listen error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> clnt_sockfd <span class="token operator">=</span> <span class="token function">accept</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> <span class="token punctuation">(</span>sockaddr<span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>clnt_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>clnt_addr_len<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">errif</span><span class="token punctuation">(</span>clnt_sockfd <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;socket accept error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">errif</span><span class="token punctuation">(</span><span class="token function">connect</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> <span class="token punctuation">(</span>sockaddr<span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>serv_addr<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>serv_addr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;socket connect error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u73B0\u5728\u6700\u7B80\u5355\u7684\u9519\u8BEF\u5904\u7406\u51FD\u6570\u5DF2\u7ECF\u5C01\u88C5\u597D\u4E86\uFF0C\u4F46\u8FD9\u4EC5\u4EC5\u7528\u4E8E\u672C\u6559\u7A0B\u7684\u5F00\u53D1\uFF0C\u5728\u771F\u5B9E\u7684\u670D\u52A1\u5668\u5F00\u53D1\u4E2D\uFF0C\u9519\u8BEF\u7EDD\u4E0D\u662F\u4E00\u4E2A\u5982\u6B64\u7B80\u5355\u7684\u8BDD\u9898\u3002</p><p>\u5F53\u6211\u4EEC\u5EFA\u7ACB\u4E00\u4E2Asocket\u8FDE\u63A5\u540E\uFF0C\u5C31\u53EF\u4EE5\u4F7F\u7528<code>&lt;unistd.h&gt;</code>\u5934\u6587\u4EF6\u4E2D<code>read</code>\u548C<code>write</code>\u6765\u8FDB\u884C\u7F51\u7EDC\u63A5\u53E3\u7684\u6570\u636E\u8BFB\u5199\u64CD\u4F5C\u4E86\u3002</p><blockquote><p>\u8FD9\u4E24\u4E2A\u51FD\u6570\u7528\u4E8ETCP\u8FDE\u63A5\u3002\u5982\u679C\u662FUDP\uFF0C\u9700\u8981\u4F7F\u7528<code>sendto</code>\u548C<code>recvfrom</code>\uFF0C\u8FD9\u4E9B\u51FD\u6570\u7684\u8BE6\u7EC6\u7528\u6CD5\u53EF\u4EE5\u53C2\u8003\u6E38\u53CC\u300ALinux\u9AD8\u6027\u80FD\u670D\u52A1\u5668\u7F16\u7A0B\u300B\u7B2C\u4E94\u7AE0\u7B2C\u516B\u8282\u3002</p></blockquote><p>\u63A5\u4E0B\u6765\u7684\u6559\u7A0B\u7528\u6CE8\u91CA\u7684\u5F62\u5F0F\u5199\u5728\u4EE3\u7801\u4E2D\uFF0C\u5148\u6765\u770B\u670D\u52A1\u5668\u4EE3\u7801\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token comment">//\u5B9A\u4E49\u7F13\u51B2\u533A</span>
    <span class="token function">bzero</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>buf<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//\u6E05\u7A7A\u7F13\u51B2\u533A</span>
    ssize_t read_bytes <span class="token operator">=</span> <span class="token function">read</span><span class="token punctuation">(</span>clnt_sockfd<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u4ECE\u5BA2\u6237\u7AEFsocket\u8BFB\u5230\u7F13\u51B2\u533A\uFF0C\u8FD4\u56DE\u5DF2\u8BFB\u6570\u636E\u5927\u5C0F</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>read_bytes <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;message from client fd %d: %s\\n&quot;</span><span class="token punctuation">,</span> clnt_sockfd<span class="token punctuation">,</span> buf<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token function">write</span><span class="token punctuation">(</span>clnt_sockfd<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">//\u5C06\u76F8\u540C\u7684\u6570\u636E\u5199\u56DE\u5230\u5BA2\u6237\u7AEF</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>read_bytes <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>             <span class="token comment">//read\u8FD4\u56DE0\uFF0C\u8868\u793AEOF</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;client fd %d disconnected\\n&quot;</span><span class="token punctuation">,</span> clnt_sockfd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">close</span><span class="token punctuation">(</span>clnt_sockfd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>read_bytes <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">//read\u8FD4\u56DE-1\uFF0C\u8868\u793A\u53D1\u751F\u9519\u8BEF\uFF0C\u6309\u7167\u4E0A\u6587\u65B9\u6CD5\u8FDB\u884C\u9519\u8BEF\u5904\u7406</span>
        <span class="token function">close</span><span class="token punctuation">(</span>clnt_sockfd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">errif</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&quot;socket read error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BA2\u6237\u7AEF\u4EE3\u7801\u903B\u8F91\u662F\u4E00\u6837\u7684\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token comment">//\u5B9A\u4E49\u7F13\u51B2\u533A</span>
    <span class="token function">bzero</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>buf<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//\u6E05\u7A7A\u7F13\u51B2\u533A</span>
    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span> buf<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment">//\u4ECE\u952E\u76D8\u8F93\u5165\u8981\u4F20\u5230\u670D\u52A1\u5668\u7684\u6570\u636E</span>
    ssize_t write_bytes <span class="token operator">=</span> <span class="token function">write</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//\u53D1\u9001\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u5230\u670D\u52A1\u5668socket\uFF0C\u8FD4\u56DE\u5DF2\u53D1\u9001\u6570\u636E\u5927\u5C0F</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>write_bytes <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token comment">//write\u8FD4\u56DE-1\uFF0C\u8868\u793A\u53D1\u751F\u9519\u8BEF</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;socket already disconnected, can&#39;t write any more!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">bzero</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>buf<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//\u6E05\u7A7A\u7F13\u51B2\u533A </span>
    ssize_t read_bytes <span class="token operator">=</span> <span class="token function">read</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//\u4ECE\u670D\u52A1\u5668socket\u8BFB\u5230\u7F13\u51B2\u533A\uFF0C\u8FD4\u56DE\u5DF2\u8BFB\u6570\u636E\u5927\u5C0F</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>read_bytes <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;message from server: %s\\n&quot;</span><span class="token punctuation">,</span> buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>read_bytes <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token comment">//read\u8FD4\u56DE0\uFF0C\u8868\u793AEOF\uFF0C\u901A\u5E38\u662F\u670D\u52A1\u5668\u65AD\u5F00\u94FE\u63A5\uFF0C\u7B49\u4F1A\u513F\u8FDB\u884C\u6D4B\u8BD5</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;server socket disconnected!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>read_bytes <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token comment">//read\u8FD4\u56DE-1\uFF0C\u8868\u793A\u53D1\u751F\u9519\u8BEF\uFF0C\u6309\u7167\u4E0A\u6587\u65B9\u6CD5\u8FDB\u884C\u9519\u8BEF\u5904\u7406</span>
        <span class="token function">close</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">errif</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&quot;socket read error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u4E00\u4E2A\u5C0F\u7EC6\u8282\uFF0CLinux\u7CFB\u7EDF\u7684\u6587\u4EF6\u63CF\u8FF0\u7B26\u7406\u8BBA\u4E0A\u662F\u6709\u9650\u7684\uFF0C\u5728\u4F7F\u7528\u5B8C\u4E00\u4E2Afd\u4E4B\u540E\uFF0C\u9700\u8981\u4F7F\u7528\u5934\u6587\u4EF6<code>&lt;unistd.h&gt;</code>\u4E2D\u7684<code>close</code>\u51FD\u6570\u5173\u95ED\u3002\u66F4\u591A\u5185\u6838\u76F8\u5173\u77E5\u8BC6\u53EF\u4EE5\u53C2\u8003Robert Love\u300ALinux\u5185\u6838\u8BBE\u8BA1\u4E0E\u5B9E\u73B0\u300B\u7684\u7B2C\u4E09\u7248\u3002</p></blockquote><p>\u81F3\u6B64\uFF0Cday02\u7684\u4E3B\u8981\u6559\u7A0B\u5DF2\u7ECF\u7ED3\u675F\u4E86\uFF0C\u5B8C\u6574\u6E90\u4EE3\u7801\u8BF7\u5728<code>code/day02</code>\u6587\u4EF6\u5939\uFF0C\u63A5\u4E0B\u6765\u770B\u770B\u4ECA\u5929\u7684\u5B66\u4E60\u6210\u679C\u4EE5\u53CA\u6D4B\u8BD5\u6211\u4EEC\u7684\u670D\u52A1\u5668\uFF01</p><p>\u8FDB\u5165<code>code/day02</code>\u6587\u4EF6\u5939\uFF0C\u4F7F\u7528make\u547D\u4EE4\u7F16\u8BD1\uFF0C\u5C06\u4F1A\u5F97\u5230<code>server</code>\u548C<code>client</code>\u3002\u8F93\u5165\u547D\u4EE4<code>./server</code>\u5F00\u59CB\u8FD0\u884C\uFF0C\u76F4\u5230<code>accept</code>\u51FD\u6570\uFF0C\u7A0B\u5E8F\u963B\u585E\u3001\u7B49\u5F85\u5BA2\u6237\u7AEF\u8FDE\u63A5\u3002\u7136\u540E\u5728\u4E00\u4E2A\u65B0\u7EC8\u7AEF\u8F93\u5165\u547D\u4EE4<code>./client</code>\u8FD0\u884C\u5BA2\u6237\u7AEF\uFF0C\u53EF\u4EE5\u770B\u5230\u670D\u52A1\u5668\u63A5\u6536\u5230\u4E86\u5BA2\u6237\u7AEF\u7684\u8FDE\u63A5\u8BF7\u6C42\uFF0C\u5E76\u6210\u529F\u8FDE\u63A5\u3002\u73B0\u5728\u5BA2\u6237\u7AEF\u963B\u585E\u5728<code>scanf</code>\u51FD\u6570\uFF0C\u7B49\u5F85\u6211\u4EEC\u952E\u76D8\u8F93\u5165\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8F93\u5165\u4E00\u53E5\u8BDD\uFF0C\u7136\u540E\u56DE\u8F66\u3002\u5728\u670D\u52A1\u5668\u7EC8\u7AEF\uFF0C\u6211\u4EEC\u53EF\u4EE5\u770B\u5230:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>message from client fd 4: Hello!
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7136\u540E\u5728\u5BA2\u6237\u7AEF\uFF0C\u4E5F\u80FD\u63A5\u53D7\u5230\u670D\u52A1\u5668\u7684\u6D88\u606F\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>message from server: Hello!
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>\u7531\u4E8E\u662F\u4E00\u4E2A<code>while(true)</code>\u5FAA\u73AF\uFF0C\u5BA2\u6237\u7AEF\u53EF\u4EE5\u4E00\u76F4\u8F93\u5165\uFF0C\u670D\u52A1\u5668\u4E5F\u4F1A\u4E00\u76F4echo\u6211\u4EEC\u7684\u6D88\u606F\u3002\u7531\u4E8E<code>scanf</code>\u51FD\u6570\u7684\u7279\u6027\uFF0C\u8F93\u5165\u7684\u8BED\u53E5\u9047\u5230\u7A7A\u683C\u65F6\uFF0C\u4F1A\u5F53\u6210\u591A\u884C\u8FDB\u884C\u5904\u7406\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8BD5\u8BD5\u3002</p></blockquote><p>\u63A5\u4E0B\u6765\u5728\u5BA2\u6237\u7AEF\u4F7F\u7528<code>control+c</code>\u7EC8\u6B62\u7A0B\u5E8F\uFF0C\u53EF\u4EE5\u770B\u5230\u670D\u52A1\u5668\u4E5F\u9000\u51FA\u4E86\u7A0B\u5E8F\u5E76\u663E\u793A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>client fd 4 disconnected
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u518D\u6B21\u8FD0\u884C\u4E24\u4E2A\u7A0B\u5E8F\uFF0C\u8FD9\u6B21\u6211\u4EEC\u4F7F\u7528<code>control+c</code>\u7EC8\u6B62\u6389\u670D\u52A1\u5668\uFF0C\u518D\u8BD5\u56FE\u4ECE\u5BA2\u6237\u7AEF\u53D1\u9001\u4FE1\u606F\uFF0C\u53EF\u4EE5\u770B\u5230\u5BA2\u6237\u7AEF\u8F93\u51FA\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server socket disconnected!
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u81F3\u6B64\uFF0C\u6211\u4EEC\u5DF2\u7ECF\u5B8C\u6574\u5730\u5F00\u53D1\u4E86\u4E00\u4E2Aecho\u670D\u52A1\u5668\uFF0C\u5E76\u4E14\u6709\u6700\u57FA\u672C\u7684\u9519\u8BEF\u5904\u7406\uFF01</p><p>\u4F46\u73B0\u5728\uFF0C\u6211\u4EEC\u7684\u670D\u52A1\u5668\u53EA\u80FD\u5904\u7406\u4E00\u4E2A\u5BA2\u6237\u7AEF\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8BD5\u8BD5\u4E24\u4E2A\u5BA2\u6237\u7AEF\u540C\u65F6\u8FDE\u63A5\u670D\u52A1\u5668\uFF0C\u770B\u7A0B\u5E8F\u5C06\u4F1A\u5982\u4F55\u8FD0\u884C\u3002\u5728day03\u7684\u6559\u7A0B\u91CC\uFF0C\u6211\u4EEC\u5C06\u4F1A\u8BB2\u89E3Linux\u7CFB\u7EDF\u9AD8\u5E76\u53D1\u7684\u57FA\u77F3--epoll\uFF0C\u5E76\u7F16\u7A0B\u5B9E\u73B0\u4E00\u4E2A\u53EF\u4EE5\u652F\u6301\u65E0\u6570\u5BA2\u6237\u7AEF\u540C\u65F6\u8FDE\u63A5\u7684echo\u670D\u52A1\u5668\uFF01</p>`,37),k=s("\u5B8C\u6574\u6E90\u4EE3\u7801\uFF1A"),r={href:"https://github.com/yuesong-feng/30dayMakeCppServer/tree/main/code/day02",target:"_blank",rel:"noopener noreferrer"},d=s("https://github.com/yuesong-feng/30dayMakeCppServer/tree/main/code/day02");function v(m,b){const a=u("ExternalLinkIcon");return p(),e("div",null,[i,n("p",null,[k,n("a",r,[d,o(a)])])])}const g=t(l,[["render",v],["__file","day02-\u4E0D\u8981\u653E\u8FC7\u4EFB\u4F55\u4E00\u4E2A\u9519\u8BEF.html.vue"]]);export{g as default};
