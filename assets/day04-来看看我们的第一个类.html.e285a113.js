import{_ as p,o as t,c as e,b as n,d as o,a as c,e as s,r as l}from"../app.dbff23ac.mjs";const i={},u=c(`<h1 id="day04-\u6765\u770B\u770B\u6211\u4EEC\u7684\u7B2C\u4E00\u4E2A\u7C7B" tabindex="-1"><a class="header-anchor" href="#day04-\u6765\u770B\u770B\u6211\u4EEC\u7684\u7B2C\u4E00\u4E2A\u7C7B" aria-hidden="true">#</a> day04-\u6765\u770B\u770B\u6211\u4EEC\u7684\u7B2C\u4E00\u4E2A\u7C7B</h1><p>\u5728\u4E0A\u4E00\u5929\uFF0C\u6211\u4EEC\u5F00\u53D1\u4E86\u4E00\u4E2A\u652F\u6301\u591A\u4E2A\u5BA2\u6237\u7AEF\u8FDE\u63A5\u7684\u670D\u52A1\u5668\uFF0C\u4F46\u5230\u76EE\u524D\u4E3A\u6B62\uFF0C\u867D\u7136\u6211\u4EEC\u7684\u7A0B\u5E8F\u4EE5<code>.cpp</code>\u7ED3\u5C3E\uFF0C\u672C\u8D28\u4E0A\u6211\u4EEC\u5199\u7684\u4ECD\u7136\u662FC\u8BED\u8A00\u7A0B\u5E8F\u3002\u867D\u7136C++\u8BED\u8A00\u5B8C\u5168\u517C\u5BB9C\u8BED\u8A00\u5E76\u4E14\u5927\u90E8\u5206\u7A0B\u5E8F\u4E2D\u90FD\u662F\u6DF7\u7528\uFF0C\u4F46\u4E00\u4E2A\u5F88\u597D\u7684\u4E60\u60EF\u662F\u628AC\u548CC++\u770B\u4F5C\u4E24\u79CD\u8BED\u8A00\uFF0C\u5199\u4EE3\u7801\u65F6\u9700\u8981\u6E05\u695A\u5730\u77E5\u9053\u81EA\u5DF1\u5728\u5199C\u8FD8\u662FC++\u3002</p><p>\u53E6\u4E00\u70B9\u662F\u6211\u4EEC\u7684\u7A0B\u5E8F\u4F1A\u53D8\u5F97\u8D8A\u6765\u8D8A\u957F\u3001\u8D8A\u6765\u8D8A\u5E9E\u5927\uFF0C\u867D\u7136\u73B0\u5728\u624D\u4E0D\u5230100\u884C\u4EE3\u7801\uFF0C\u4F46\u628A\u6240\u6709\u903B\u8F91\u653E\u5728\u4E00\u4E2A\u7A0B\u5E8F\u91CC\u663E\u7136\u662F\u4E00\u79CD\u9519\u8BEF\u7684\u505A\u6CD5\uFF0C\u6211\u4EEC\u9700\u8981\u5BF9\u7A0B\u5E8F\u8FDB\u884C\u6A21\u5757\u5316\uFF0C\u6BCF\u4E00\u4E2A\u6A21\u5757\u4E13\u95E8\u5904\u7406\u4E00\u4E2A\u4EFB\u52A1\uFF0C\u8FD9\u6837\u53EF\u4EE5\u589E\u52A0\u7A0B\u5E8F\u7684\u53EF\u8BFB\u6027\uFF0C\u4E5F\u53EF\u4EE5\u5199\u51FA\u66F4\u5927\u5E9E\u5927\u3001\u529F\u80FD\u66F4\u52A0\u590D\u6742\u7684\u7A0B\u5E8F\u3002\u4E0D\u4EC5\u5982\u6B64\uFF0C\u8FD8\u53EF\u4EE5\u5F88\u65B9\u4FBF\u5730\u8FDB\u884C\u4EE3\u7801\u590D\u7528\uFF0C\u4E5F\u5C31\u662F\u9020\u8F6E\u5B50\u3002</p><p>C++\u662F\u4E00\u95E8\u9762\u5411\u5BF9\u8C61\u7684\u8BED\u8A00\uFF0C\u6700\u4F4E\u7EA7\u7684\u6A21\u5757\u5316\u7684\u65B9\u5F0F\u5C31\u662F\u6784\u5EFA\u4E00\u4E2A\u7C7B\u3002\u4E3E\u4E2A\u4F8B\u5B50\uFF0C\u6211\u4EEC\u7684\u7A0B\u5E8F\u6709\u65B0\u5EFA\u670D\u52A1\u5668socket\u3001\u7ED1\u5B9AIP\u5730\u5740\u3001\u76D1\u542C\u3001\u63A5\u53D7\u5BA2\u6237\u7AEF\u8FDE\u63A5\u7B49\u4EFB\u52A1\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>AF_INET<span class="token punctuation">,</span> SOCK_STREAM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">errif</span><span class="token punctuation">(</span>sockfd <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;socket create error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> serv_addr<span class="token punctuation">;</span>
<span class="token function">bzero</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>serv_addr<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>serv_addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
serv_addr<span class="token punctuation">.</span>sin_family <span class="token operator">=</span> AF_INET<span class="token punctuation">;</span>
serv_addr<span class="token punctuation">.</span>sin_addr<span class="token punctuation">.</span>s_addr <span class="token operator">=</span> <span class="token function">inet_addr</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
serv_addr<span class="token punctuation">.</span>sin_port <span class="token operator">=</span> <span class="token function">htons</span><span class="token punctuation">(</span><span class="token number">8888</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">errif</span><span class="token punctuation">(</span><span class="token function">bind</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> <span class="token punctuation">(</span>sockaddr<span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>serv_addr<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>serv_addr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;socket bind error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">errif</span><span class="token punctuation">(</span><span class="token function">listen</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> SOMAXCONN<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;socket listen error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> clnt_addr<span class="token punctuation">;</span>
<span class="token function">bzero</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>clnt_addr<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>clnt_addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
socklen_t clnt_addr_len <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>clnt_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> clnt_sockfd <span class="token operator">=</span> <span class="token function">accept</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> <span class="token punctuation">(</span>sockaddr<span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>clnt_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>clnt_addr_len<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">errif</span><span class="token punctuation">(</span>clnt_sockfd <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;socket accept error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\u4EE3\u7801\u670919\u884C\uFF0C\u8FD9\u5DF2\u7ECF\u662F\u4F7F\u7528socket\u6700\u7CBE\u7B80\u7684\u4EE3\u7801\u3002\u5728\u670D\u52A1\u5668\u5F00\u53D1\u4E2D\uFF0C\u6211\u4EEC\u6216\u8BB8\u4F1A\u5EFA\u7ACB\u591A\u4E2Asocket\u53E3\uFF0C\u6216\u8BB8\u4F1A\u5904\u7406\u591A\u4E2A\u5BA2\u6237\u7AEF\u8FDE\u63A5\uFF0C\u4F46\u6211\u4EEC\u5E76\u4E0D\u5E0C\u671B\u6BCF\u6B21\u90FD\u91CD\u590D\u7F16\u5199\u8FD9\u4E48\u591A\u884C\u4EE3\u7801\uFF0C\u6211\u4EEC\u5E0C\u671B\u8FD9\u6837\u4F7F\u7528\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>Socket <span class="token operator">*</span>serv_sock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">Socket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
InetAddress <span class="token operator">*</span>serv_addr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">InetAddress</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span> <span class="token number">8888</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
serv_sock<span class="token operator">-&gt;</span><span class="token function">bind</span><span class="token punctuation">(</span>serv_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
serv_sock<span class="token operator">-&gt;</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
InetAddress <span class="token operator">*</span>clnt_addr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">InetAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
Socket <span class="token operator">*</span>clnt_sock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">Socket</span><span class="token punctuation">(</span>serv_sock<span class="token operator">-&gt;</span><span class="token function">accept</span><span class="token punctuation">(</span>clnt_addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EC5\u4EC5\u516D\u884C\u4EE3\u7801\u5C31\u53EF\u4EE5\u5B9E\u73B0\u548C\u4E4B\u524D\u4E00\u6837\u7684\u529F\u80FD\uFF0C\u8FD9\u6837\u7684\u4F7F\u7528\u65B9\u5F0F\u5FFD\u7565\u4E86\u5E95\u5C42\u7684\u8BED\u8A00\u7EC6\u8282\uFF0C\u4E0D\u7528\u5728\u7A0B\u5E8F\u4E2D\u8003\u8651\u9519\u8BEF\u5904\u7406\uFF0C\u66F4\u7B80\u5355\u3001\u66F4\u52A0\u4E13\u6CE8\u4E8E\u7A0B\u5E8F\u7684\u81EA\u7136\u903B\u8F91\uFF0C\u5927\u5BB6\u6BEB\u65E0\u7591\u95EE\u4E5F\u80AF\u5B9A\u5E0C\u671B\u4EE5\u8FD9\u6837\u7B80\u5355\u7684\u65B9\u5F0F\u4F7F\u7528socket\u3002</p><p>\u7C7B\u4F3C\u7684\u8FD8\u6709epoll\uFF0C\u6700\u7CBE\u7B80\u7684\u4F7F\u7528\u65B9\u5F0F\u4E3A\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> epfd <span class="token operator">=</span> <span class="token function">epoll_create1</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">errif</span><span class="token punctuation">(</span>epfd <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;epoll create error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token class-name">epoll_event</span> events<span class="token punctuation">[</span>MAX_EVENTS<span class="token punctuation">]</span><span class="token punctuation">,</span> ev<span class="token punctuation">;</span>
<span class="token function">bzero</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>events<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>events<span class="token punctuation">)</span> <span class="token operator">*</span> MAX_EVENTS<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">bzero</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ev<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ev<span class="token punctuation">.</span>data<span class="token punctuation">.</span>fd <span class="token operator">=</span> sockfd<span class="token punctuation">;</span>
ev<span class="token punctuation">.</span>events <span class="token operator">=</span> EPOLLIN <span class="token operator">|</span> EPOLLET<span class="token punctuation">;</span>

<span class="token function">epoll_ctl</span><span class="token punctuation">(</span>epfd<span class="token punctuation">,</span> EPOLL_CTL_ADD<span class="token punctuation">,</span> sockfd<span class="token punctuation">,</span> <span class="token operator">&amp;</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">int</span> nfds <span class="token operator">=</span> <span class="token function">epoll_wait</span><span class="token punctuation">(</span>epfd<span class="token punctuation">,</span> events<span class="token punctuation">,</span> MAX_EVENTS<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">errif</span><span class="token punctuation">(</span>nfds <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;epoll wait error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nfds<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// handle event</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u800C\u6211\u4EEC\u66F4\u5E0C\u671B\u8FD9\u6837\u6765\u4F7F\u7528\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>Epoll <span class="token operator">*</span>ep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">Epoll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ep<span class="token operator">-&gt;</span><span class="token function">addFd</span><span class="token punctuation">(</span>serv_sock<span class="token operator">-&gt;</span><span class="token function">getFd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> EPOLLIN <span class="token operator">|</span> EPOLLET<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    vector<span class="token operator">&lt;</span>epoll_event<span class="token operator">&gt;</span> events <span class="token operator">=</span> ep<span class="token operator">-&gt;</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> events<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// handle event</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540C\u6837\u5B8C\u5168\u5FFD\u7565\u4E86\u5982\u9519\u8BEF\u5904\u7406\u4E4B\u7C7B\u7684\u5E95\u5C42\u7EC6\u8282\uFF0C\u5927\u5927\u7B80\u5316\u4E86\u7F16\u7A0B\uFF0C\u589E\u52A0\u4E86\u7A0B\u5E8F\u7684\u53EF\u8BFB\u6027\u3002</p><p>\u5728\u4ECA\u5929\u7684\u4EE3\u7801\u4E2D\uFF0C\u7A0B\u5E8F\u7684\u529F\u80FD\u548C\u6628\u5929\u4E00\u6837\uFF0C\u4EC5\u4EC5\u5C06<code>Socket</code>\u3001<code>InetAddress</code>\u548C<code>Epoll</code>\u5C01\u88C5\u6210\u7C7B\uFF0C\u8FD9\u4E5F\u662F\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\u7684\u6700\u6838\u5FC3\u3001\u6700\u57FA\u672C\u7684\u601D\u60F3\u3002\u73B0\u5728\u6211\u4EEC\u7684\u76EE\u5F55\u7ED3\u6784\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>client.cpp
Epoll.cpp
Epoll.h
InetAddress.cpp
InetAddress.h
Makefile
server.cpp
Socket.cpp
Socket.h
util.cpp
util.h
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\u5728\u7F16\u8BD1\u7A0B\u5E8F\u7684\u4F7F\u7528\uFF0C\u9700\u8981\u7F16\u8BD1<code>Socket</code>\u3001<code>InetAddress</code>\u548C<code>Epoll</code>\u7C7B\u7684<code>.cpp</code>\u6587\u4EF6\uFF0C\u7136\u540E\u8FDB\u884C\u94FE\u63A5\uFF0C\u56E0\u4E3A<code>.h</code>\u6587\u4EF6\u91CC\u53EA\u662F\u7C7B\u7684\u5B9A\u4E49\uFF0C\u5E76\u672A\u5B9E\u73B0\u3002</p><blockquote><p>C/C++\u7A0B\u5E8F\u7F16\u8BD1\u3001\u94FE\u63A5\u662F\u4E00\u4E2A\u5F88\u590D\u6742\u7684\u4E8B\u60C5\uFF0C\u5177\u4F53\u539F\u7406\u8BF7\u53C2\u8003\u300A\u6DF1\u5165\u7406\u89E3\u8BA1\u7B97\u673A\u7CFB\u7EDF\uFF08\u7B2C\u4E09\u7248\uFF09\u300B\u7B2C\u4E03\u7AE0\u3002</p></blockquote><p>\u81F3\u6B64\uFF0Cday04\u7684\u4E3B\u8981\u6559\u7A0B\u5DF2\u7ECF\u7ED3\u675F\u4E86\uFF0C\u5B8C\u6574\u6E90\u4EE3\u7801\u8BF7\u5728<code>code/day04</code>\u6587\u4EF6\u5939\uFF0C\u670D\u52A1\u5668\u7684\u529F\u80FD\u548C\u6628\u5929\u4E00\u6837\u3002</p><p>\u8FDB\u5165<code>code/day04</code>\u6587\u4EF6\u5939\uFF0C\u4F7F\u7528make\u547D\u4EE4\u7F16\u8BD1\uFF0C\u5C06\u4F1A\u5F97\u5230<code>server</code>\u548C<code>client</code>\uFF0C\u8F93\u5165\u547D\u4EE4<code>./server</code>\u5F00\u59CB\u8FD0\u884C\u670D\u52A1\u5668\u3002\u7136\u540E\u5728\u4E00\u4E2A\u65B0\u7EC8\u7AEF\u8F93\u5165\u547D\u4EE4<code>./client</code>\u8FD0\u884C\u5BA2\u6237\u7AEF\uFF0C\u53EF\u4EE5\u770B\u5230\u670D\u52A1\u5668\u63A5\u6536\u5230\u4E86\u5BA2\u6237\u7AEF\u7684\u8FDE\u63A5\u8BF7\u6C42\uFF0C\u5E76\u6210\u529F\u8FDE\u63A5\u3002\u518D\u65B0\u5F00\u4E00\u4E2A\u6216\u591A\u4E2A\u7EC8\u7AEF\uFF0C\u8FD0\u884Cclient\uFF0C\u53EF\u4EE5\u770B\u5230\u8FD9\u4E9B\u5BA2\u6237\u7AEF\u4E5F\u540C\u65F6\u8FDE\u63A5\u5230\u4E86\u670D\u52A1\u5668\u3002\u6B64\u65F6\u6211\u4EEC\u5728\u4EFB\u610F\u4E00\u4E2Aclient\u8F93\u5165\u4E00\u6761\u4FE1\u606F\uFF0C\u670D\u52A1\u5668\u90FD\u663E\u793A\u5E76\u53D1\u9001\u5230\u8BE5\u5BA2\u6237\u7AEF\u3002\u5982\u4F7F\u7528<code>control+c</code>\u7EC8\u6B62\u6389\u67D0\u4E2Aclient\uFF0C\u670D\u52A1\u5668\u56DE\u663E\u793A\u8FD9\u4E2Aclient\u5DF2\u7ECF\u65AD\u5F00\u8FDE\u63A5\uFF0C\u4F46\u5176\u4ED6client\u5E76\u4E0D\u53D7\u5F71\u54CD\u3002</p><p>\u81F3\u6B64\uFF0C\u6211\u4EEC\u5DF2\u7ECF\u5B8C\u6574\u5730\u5F00\u53D1\u4E86\u4E00\u4E2Aecho\u670D\u52A1\u5668\uFF0C\u5E76\u4E14\u5F15\u5165\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\u7684\u601D\u60F3\uFF0C\u521D\u6B65\u5C01\u88C5\u4E86<code>Socket</code>\u3001<code>InetAddress</code>\u548C<code>Epoll</code>\uFF0C\u5927\u5927\u7CBE\u7B80\u4E86\u4E3B\u7A0B\u5E8F\uFF0C\u9690\u85CF\u4E86\u5E95\u5C42\u8BED\u8A00\u5B9E\u73B0\u7EC6\u8282\u3001\u589E\u52A0\u4E86\u53EF\u8BFB\u6027\u3002</p>`,20),r=s("\u5B8C\u6574\u6E90\u4EE3\u7801\uFF1A"),k={href:"https://github.com/yuesong-feng/30dayMakeCppServer/tree/main/code/day04",target:"_blank",rel:"noopener noreferrer"},d=s("https://github.com/yuesong-feng/30dayMakeCppServer/tree/main/code/day04");function v(m,b){const a=l("ExternalLinkIcon");return t(),e("div",null,[u,n("p",null,[r,n("a",k,[d,o(a)])])])}const f=p(i,[["render",v],["__file","day04-\u6765\u770B\u770B\u6211\u4EEC\u7684\u7B2C\u4E00\u4E2A\u7C7B.html.vue"]]);export{f as default};
