import{_ as e,o as t,c as p,b as n,d as o,a as c,e as s,r as i}from"../app.dbff23ac.mjs";const l={},u=c(`<h1 id="postgresql\u63D2\u4EF6\u5F00\u53D1" tabindex="-1"><a class="header-anchor" href="#postgresql\u63D2\u4EF6\u5F00\u53D1" aria-hidden="true">#</a> PostgreSQL\u63D2\u4EF6\u5F00\u53D1</h1><p>PostgreSQL\u4E2D\u8BB8\u591A\u63A7\u5236\u4FE1\u606F\u90FD\u662F\u4EE5\u7CFB\u7EDF\u8868\u7684\u5F62\u5F0F\u6765\u7BA1\u7406\uFF0C\u8FD9\u4E2A\u7279\u70B9\u51B3\u5B9A\u4E86PostgreSQL\u6BD4\u5176\u4ED6\u6570\u636E\u5E93\u66F4\u5BB9\u6613\u8FDB\u884C\u5185\u6838\u6269\u5C55\u3002PostgreSQL\u8FD8\u63D0\u4F9B\u4E86\u4E30\u5BCC\u7684\u6570\u636E\u5E93\u5185\u6838\u7F16\u7A0B\u63A5\u53E3\uFF0C\u5141\u8BB8\u5F00\u53D1\u8005\u4EE5\u63D2\u4EF6\u7684\u5F62\u5F0F\u5C06\u81EA\u5DF1\u7684\u4EE3\u7801\u878D\u5165\u5185\u6838\u3002</p><p>PostgreSQL\u63D2\u4EF6\u5F00\u53D1\u975E\u5E38\u7B80\u5355\uFF0C\u4E0B\u9762\u4E3E\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u5F00\u53D1\u4E00\u4E2A\u968F\u673A\u6D4B\u8BD5\u6570\u636E\u751F\u6210\u5668\u3002</p><p>\u63D2\u4EF6\u540D\u4E3A<code>pg_testgen</code>\uFF0C\u9996\u5148\u9700\u8981\u521B\u5EFA\u56DB\u4E2A\u6587\u4EF6\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pg_testgen.control      <span class="token comment"># \u63D2\u4EF6\u540D.control</span>
pg_testgen.c            <span class="token comment"># \u63D2\u4EF6\u540D.c</span>
pg_testgen--1.0.sql     <span class="token comment"># \u63D2\u4EF6\u540D--1.0.sql</span>
Makefile                <span class="token comment"># \u7528\u4E8E\u7F16\u8BD1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>pg_testgen.control</code>\u662F\u63D2\u4EF6\u7684\u63A7\u5236\u6587\u4EF6\uFF0C\u662F\u4E00\u4E2A\u53EA\u6709\u4E94\u516D\u884C\u7684\u6A21\u7248\uFF0C\u5B58\u653E\u63D2\u4EF6\u8BF4\u660E\u3001\u9ED8\u8BA4\u7248\u672C\u53F7\u3001\u6A21\u5757\u8DEF\u5F84\u3001\u662F\u5426\u53EF\u91CD\u5165\u7B49\uFF0C\u53EA\u9700\u8981\u5C06\u63D2\u4EF6\u540D\u66F4\u6539\u5373\u53EF\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># pg_testgen extension
comment = &#39;PostgreSQL test generator&#39;
default_version = &#39;1.0&#39;
module_pathname = &#39;$libdir/pg_testgen&#39;
relocatable = true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Makefile</code>\u4E5F\u57FA\u672C\u4E0A\u662F\u6A21\u7248\uFF0C\u6839\u636E\u81EA\u5DF1\u7684\u63D2\u4EF6\u540D\u3001\u6587\u4EF6\u540D\u4FEE\u6539\u5373\u53EF\uFF1A</p><div class="language-makefile ext-makefile line-numbers-mode"><pre class="language-makefile"><code><span class="token comment"># contrib/pg_testgen/Makefile</span>
MODULE_big <span class="token operator">=</span> pg_testgen
OBJS <span class="token operator">=</span> \\        <span class="token comment"># \u6240\u6709.c\u6587\u4EF6\u751F\u4EA7\u7684\u540C\u540D.o\u76EE\u6807\u6587\u4EF6</span>
 <span class="token variable">$</span><span class="token punctuation">(</span>WIN32RES<span class="token punctuation">)</span> \\
 pg_testgen.o
PGFILEDESC <span class="token operator">=</span> <span class="token string">&quot;pg_testgen - test data generator&quot;</span>

PG_CPPFLAGS <span class="token operator">=</span> -I<span class="token variable">$</span><span class="token punctuation">(</span>libpq_srcdir<span class="token punctuation">)</span>
SHLIB_LINK_INTERNAL <span class="token operator">=</span> <span class="token variable">$</span><span class="token punctuation">(</span>libpq<span class="token punctuation">)</span>

EXTENSION <span class="token operator">=</span> pg_testgen  <span class="token comment"># \u63D2\u4EF6\u540D</span>
DATA <span class="token operator">=</span> pg_testgen--1.0.sql  <span class="token comment"># \u63D2\u4EF6\u7684sql\u6587\u4EF6</span>

REGRESS <span class="token operator">=</span> pg_testgen <span class="token comment"># sql\u3001expected \u6587\u4EF6\u5939\u4E0B\u7684\u6D4B\u8BD5sql\u6587\u4EF6\u540D</span>

<span class="token keyword">ifdef</span> USE_PGXS
PG_CONFIG <span class="token operator">=</span> pg_config
PGXS <span class="token operator">:=</span> <span class="token variable">$</span><span class="token punctuation">(</span><span class="token function">shell</span> <span class="token variable">$</span><span class="token punctuation">(</span>PG_CONFIG<span class="token punctuation">)</span> --pgxs<span class="token punctuation">)</span>
<span class="token keyword">include</span> <span class="token variable">$</span><span class="token punctuation">(</span>PGXS<span class="token punctuation">)</span>
<span class="token keyword">else</span>
SHLIB_PREREQS <span class="token operator">=</span> submake-libpq
subdir <span class="token operator">=</span> contrib/pg_testgen
top_builddir <span class="token operator">=</span> ../..
<span class="token keyword">include</span> <span class="token variable">$</span><span class="token punctuation">(</span>top_builddir<span class="token punctuation">)</span>/src/Makefile.global
<span class="token keyword">include</span> <span class="token variable">$</span><span class="token punctuation">(</span>top_srcdir<span class="token punctuation">)</span>/contrib/contrib-global.mk
<span class="token keyword">endif</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>pg_testgen--1.0.sql</code>\u662F\u63D2\u4EF6\u7684\u521D\u59CB\u5316sql\u6587\u4EF6\uFF0C1.0\u662F\u7248\u672C\u53F7\uFF0C\u5982\u679C\u9700\u8981\u7248\u672C\u66F4\u65B0\u52301.1\uFF0C\u5219\u9700\u8981<code>pg_testgen--1.0--1.1.sql</code>\u6587\u4EF6\u3002\u6587\u4EF6\u7684\u5185\u5BB9\u5982\u4E0B\uFF1A</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>\\echo <span class="token keyword">Use</span> <span class="token string">&quot;CREATE EXTENSION pg_testgen&quot;</span> <span class="token keyword">to</span> <span class="token keyword">load</span> this <span class="token keyword">file</span><span class="token punctuation">.</span> \\quit

<span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> rand_int<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">,</span> <span class="token keyword">integer</span><span class="token punctuation">)</span>
    <span class="token keyword">RETURNS</span> <span class="token keyword">integer</span>
    <span class="token keyword">AS</span> <span class="token string">&#39;MODULE_PATHNAME&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rand_int&#39;</span>
    <span class="token keyword">LANGUAGE</span> C STRICT<span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u6587\u4EF6\u5FC5\u987B\u5728psql\u4E2D\u901A\u8FC7<code>CREATE EXTENSION pg_testgen</code>\u52A0\u8F7D\uFF0C\u5426\u5219\u4F1A\u62A5\u7B2C\u4E00\u884C\u7684\u9519\u8BEF\u3002\u4E0B\u9762\u7684\u8BED\u53E5\u662FPL/pgSQL\u8BED\u53E5\uFF0C\u652F\u6301\u5982\u5EFA\u8868\u3001\u63D2\u5165\u3001\u521B\u5EFA\u51FD\u6570\u7B49PostgreSQL\u64CD\u4F5C\u3002\u6211\u4EEC\u5E0C\u671B\u4F7F\u7528C\u8BED\u8A00\u8FDB\u884C\u6570\u636E\u5E93\u5185\u6838\u7684\u63D2\u4EF6\u5F00\u53D1\uFF0C\u6240\u4EE5\u8FD9\u91CC\u9700\u8981\u521B\u5EFA\u51FD\u6570\u5E76\u5173\u8054\u5230\u5BF9\u5E94\u7684C\u8BED\u8A00\u51FD\u6570\u3002\u8FD9\u91CC\u7684<code>rand_int(integer, integer)</code>\u662F\u6709\u4E24\u4E2A\u6574\u6570\u4F5C\u4E3A\u53C2\u6570\u51FD\u6570\uFF0C\u8FD4\u56DE\u503C\u662F\u6574\u578B\uFF0C\u52A0\u8F7D\u63D2\u4EF6\u540E\u4F7F\u7528<code>rand_int(a, b)</code>\u5373\u53EF\u4F7F\u7528\u3002PL/pgSQL\u8BED\u53E5\u5B9A\u4E49\u7684\u51FD\u6570\u548CC\u8BED\u8A00\u51FD\u6570\u4E00\u822C\u540C\u540D\u3002</p><p><code>pg_testgen.c</code>\u6587\u4EF6\u662F\u63D2\u4EF6\u5F00\u53D1\u7684\u4E3B\u8981\u6587\u4EF6\uFF0C\u9996\u5148\u9700\u8981\u5F15\u5165\u4E24\u4E2A\u5FC5\u987B\u7684\u5934\u6587\u4EF6\uFF0C\u5E76\u58F0\u660E<code>PG_MODULE_MAGIC</code>\u786E\u4FDD\u4E0D\u4F1A\u9519\u8BEF\u52A0\u8F7D\u5171\u4EAB\u5E93\u6587\u4EF6\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;postgres.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;fmgr.h&quot;</span></span>

PG_MODULE_MAGIC<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u5728<code>pg_testgen--1.0.sql</code>\u4E2D\u5B9A\u4E49\u7684C\u8BED\u8A00\u51FD\u6570\uFF0C\u9700\u8981\u5728\u8BE5\u6587\u4EF6\u4E2D\u58F0\u660E\u5E76\u5B9E\u73B0\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token function">PG_FUNCTION_INFO_V1</span><span class="token punctuation">(</span>rand_int<span class="token punctuation">)</span><span class="token punctuation">;</span>
Datum <span class="token function">rand_int</span><span class="token punctuation">(</span>PG_FUNCTION_ARGS<span class="token punctuation">)</span><span class="token punctuation">{</span>
    int32 ret <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
    <span class="token function">PG_RETURN_INT32</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\u6BCF\u4E2A\u9700\u8981\u5728psql\u4E2D\u8C03\u7528\u7684\u51FD\u6570\u90FD\u9700\u8981\u7528<code>PG_FUNCTION_INFO_V1(rand_int);</code>\u6765\u6CE8\u518C\uFF0C\u800C\u53EA\u5728\u6269\u5C55\u5185\u90E8\u8C03\u7528\u7684\u51FD\u6570\u5219\u4E0D\u9700\u8981\uFF0C\u4E14\u6700\u597D\u58F0\u660E\u4E3A<code>static</code>\u51FD\u6570\u3002</p><p>\u5BF9\u4E8E\u53C2\u6570\uFF0C\u7531\u4E8E\u662F\u4E24\u4E2Aint\u7C7B\u578B\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4E0B\u9762\u7684\u5B8F\u5B9A\u4E49\u6765\u83B7\u53D6\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>int32 arg1 <span class="token operator">=</span> <span class="token function">PG_GETARG_INT32</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
int32 arg2 <span class="token operator">=</span> <span class="token function">PG_GETARG_INT32</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\u8FD9\u91CC\u4E0D\u80FD\u5224\u65AD\u4ECEpsql\u4E2D\u4F20\u5165\u7684\u53C2\u6570\u4E2A\u6570\uFF0C\u56E0\u4E3A\u53C2\u6570\u4E2A\u6570\u662F\u53EF\u53D8\u7684\uFF0C\u5BF9\u4E8EC\u8BED\u8A00\u63D2\u4EF6\uFF0C\u51FD\u6570\u540D\u662F\u552F\u4E00\u6807\u8BC6\uFF0C\u4E0D\u80FD\u652F\u6301C\u8BED\u8A00\u7684\u51FD\u6570\u91CD\u8F7D\u3002\u4F46PL/pgSQL\u5B9A\u4E49\u7684\u51FD\u6570\u53EF\u4EE5\u91CD\u8F7D\uFF0C\u5982\u679C\u9700\u8981\u91CD\u8F7D\u51FD\u6570\uFF0C\u9700\u8981\u8981\u5728<code>pg_testgen--1.0.sql</code>\u4E2D\u5B9A\u4E49\u591A\u4E2A\u540C\u540D\u51FD\u6570\uFF0C\u8FD9\u4E9B\u51FD\u6570\u90FD\u4F1A\u8C03\u7528\u540C\u4E00\u4E2AC\u51FD\u6570\uFF0C\u53C2\u6570\u4E2A\u6570\u4FDD\u5B58\u5728<code>fcinfo-&gt;nargs</code>\u4E2D\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4EE5\u4E0B\u8BED\u53E5\u5224\u65AD\u4ECEpsql\u4E2D\u8C03\u7528\u5BF9\u5E94C\u51FD\u6570\u7684\u53C2\u6570\u662F\u5426\u6B63\u786E\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token function">Assert</span><span class="token punctuation">(</span>fcinfo<span class="token operator">-&gt;</span>nargs <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> fcinfo<span class="token operator">-&gt;</span>nargs <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u5224\u65AD\u8868\u793A\u8BE5C\u51FD\u6570\u4F1A\u88AB\u4E24\u4E2A<code>pg_testgen--1.0.sql</code>\u4E2D\u5B9A\u4E49\u7684\u51FD\u6570\u8C03\u7528\uFF0C\u53C2\u6570\u4E2A\u6570\u5206\u522B\u4E3A0\u548C2\u3002\u5982\u679Cpsql\u4E2D\u8C03\u7528\u51FD\u6570\u65F6\u53C2\u6570\u4E2A\u6570\u9519\u8BEF\uFF0C\u4F1A\u76F4\u63A5\u62A5\u9519\u3001\u4E0D\u4F1A\u5F80\u4E0B\u6267\u884C\u3002</p><p>\u5BF9\u4E8E\u4E0D\u540C\u7684\u53C2\u6570\u7C7B\u578B\uFF0C\u9700\u8981\u7528\u4E0D\u540C\u7684\u5B8F\u5B9A\u4E49\u6765\u83B7\u53D6\uFF0C\u53EF\u4EE5\u5728<code>&quot;fmgr.h&quot;</code>\u5934\u6587\u4EF6\u4E2D\u67E5\u770B\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token function">PG_GETARG_INT32</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PG_GETARG_CHAR</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PG_GETARG_CSTRING</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PG_GETARG_FLOAT8</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u4E0D\u540C\u7684\u8FD4\u56DE\u7C7B\u578B\u4E5F\u9700\u8981\u7528<code>&quot;fmgr.h&quot;</code>\u4E2D\u7684\u4E0D\u540C\u7684\u5B8F\u5B9A\u4E49\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token function">PG_RETURN_INT32</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PG_RETURN_TEXT_P</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PG_RETURN_FLOAT8</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PG_RETURN_BOOL</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u5B8C\u6574\u7684\u4F8B\u5B50\uFF0C\u4E00\u4E2A\u91CD\u8F7D\u4E86\u4E24\u4E2APL/pgSQL\u51FD\u6570\u7684C\u51FD\u6570\uFF0C\u5982\u679C\u6CA1\u6709\u53C2\u6570\u5219\u8FD4\u56DE\u4E00\u4E2A\u968F\u673A\u6574\u6570\uFF0C\u5982\u679C\u6709\u4E24\u4E2A\u53C2\u6570[a, b]\u5219\u8FD4\u56DE\u4E00\u4E2A\u5728[a, b]\u95F4\u7684\u968F\u673A\u6574\u6570\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">inline</span> int32 <span class="token function">rand_int_internal</span><span class="token punctuation">(</span><span class="token keyword">int</span> min<span class="token punctuation">,</span> <span class="token keyword">int</span> max<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> min<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">PG_FUNCTION_INFO_V1</span><span class="token punctuation">(</span>rand_int<span class="token punctuation">)</span><span class="token punctuation">;</span>
Datum <span class="token function">rand_int</span><span class="token punctuation">(</span>PG_FUNCTION_ARGS<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">Assert</span><span class="token punctuation">(</span>fcinfo<span class="token operator">-&gt;</span>nargs <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> fcinfo<span class="token operator">-&gt;</span>nargs <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    int32 min <span class="token operator">=</span> fcinfo<span class="token operator">-&gt;</span>nargs <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">?</span> <span class="token function">PG_GETARG_INT32</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
    int32 max <span class="token operator">=</span> fcinfo<span class="token operator">-&gt;</span>nargs <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">?</span> <span class="token function">PG_GETARG_INT32</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> INT32_MAX<span class="token punctuation">;</span>
    <span class="token function">PG_RETURN_INT32</span><span class="token punctuation">(</span><span class="token function">rand_int_internal</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span> max<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6211\u4EEC\u9700\u8981\u83B7\u53D6\u3001\u8FD4\u56DE\u4E00\u4E2A<code>text</code>\u5B57\u7B26\u4E32\u7C7B\u578B\uFF0C\u9700\u8981\u4F7F\u7528PostgreSQL\u63D0\u4F9B\u7684<code>text</code>\u7ED3\u6784\u4F53\u6765\u5C01\u88C5\uFF0C\u5728\u5206\u914D\u5185\u5B58\u65F6\u9700\u8981\u52A0\u4E0A\u4E00\u4E2A\u5934\u90E8\u5927\u5C0F<code>CARHDRSZ</code>\uFF0C<code>VARDATA(t)</code>\u8868\u793At\u7684\u6570\u636E\u90E8\u5206\u8D77\u59CB\u5730\u5740\uFF0C<code>VARDATA_ANY(t)</code>\u53EF\u4EE5\u53D6\u5230text\u7684\u6570\u636E\u90E8\u5206\u6216\u8005\u4E00\u4E2A\u666E\u901A<code>Datum</code>\u7684\u6570\u636E\u90E8\u5206\uFF0C<code>VARSIZE_ANY_EXHDR(t)</code>\u8868\u793A<code>text</code>\u9664\u53BB\u5934\u90E8\u7684\u6570\u636E\u957F\u5EA6\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// \u4E00\u4E2A\u5927\u5C0F\u4E3Asize\u7684text\uFF0C\u5206\u914D\u5185\u5B58\u65F6\u9700\u8981\u52A0\u4E0A\u5934\u90E8\u5927\u5C0F</span>
text <span class="token operator">*</span>t <span class="token operator">=</span> <span class="token punctuation">(</span>text <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">palloc</span><span class="token punctuation">(</span>VARHDRSZ <span class="token operator">+</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">SET_VARSIZE</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> VARHDRSZ <span class="token operator">+</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5C06\u6570\u636E\u62F7\u8D1D\u5230t\u7684\u6570\u636E\u90E8\u5206</span>
<span class="token function">memcpy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">VARDATA</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">/* destination */</span>
           <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">VARDATA_ANY</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">/* source */</span>
           <span class="token function">VARSIZE_ANY_EXHDR</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">/* how many bytes */</span>

<span class="token function">PG_RETURN_TEXT_P</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8FD4\u56DE\u6539text\u7684\u6307\u9488</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u9700\u8981\u8FD4\u56DE\u591A\u884C\u6570\u636E\uFF0C\u9700\u8981\u4F7F\u7528SRF(set-returning functions)\uFF0C\u5728<code>pg_testgen--1.0.sql</code>\u5B9A\u4E49\u8FD4\u56DE\u503C\u65F6\u9700\u8981\u673A\u4E0ASETOF\u5173\u952E\u5B57\uFF1A</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> rows_int<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span>
    <span class="token keyword">RETURNS</span> SETOF <span class="token keyword">integer</span>
    <span class="token keyword">AS</span> <span class="token string">&#39;MODULE_PATHNAME&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rows_int&#39;</span>
    <span class="token keyword">LANGUAGE</span> C STRICT<span class="token punctuation">;</span>

<span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> rows_int<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">,</span> <span class="token keyword">integer</span><span class="token punctuation">,</span> <span class="token keyword">integer</span><span class="token punctuation">)</span>
    <span class="token keyword">RETURNS</span> SETOF <span class="token keyword">integer</span>
    <span class="token keyword">AS</span> <span class="token string">&#39;MODULE_PATHNAME&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rows_int&#39;</span>
    <span class="token keyword">LANGUAGE</span> C STRICT<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728.c\u6587\u4EF6\u4E2D\uFF0C\u9700\u8981\u5305\u542BSRF\u5934\u6587\u4EF6\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;funcapi.h&quot;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>SRF\u51FD\u6570\u662F\u9012\u5F52\u8C03\u7528\u7684\uFF0C\u548C\u666E\u901A\u51FD\u6570\u4F7F\u7528\u65B9\u6CD5\u76F8\u540C\uFF0C\u53EA\u662F\u9700\u8981\u5957\u8FDBSRF\u6A21\u7248\uFF0C\u4EE5\u4E0B\u662F\u4E00\u4E2A\u5F88\u7B80\u5355\u7684\u4F8B\u5B50\uFF0C\u53EF\u4EE5\u5F53\u4F5C\u6A21\u7248\u4F7F\u7528\uFF0C\u8BE5\u51FD\u6570\u63A5\u6536\u4E00\u4E2A\u53C2\u6570r\u6216\u8005\u4E09\u4E2A\u53C2\u6570[r, a, b]\u3002\u5982\u679C\u53EA\u6709\u4E00\u4E2A\u53C2\u6570\uFF0C\u8FD4\u56DEr\u884C\u968F\u673A\u6574\u6570\uFF1B\u5982\u679C\u662F\u4E09\u4E2A\u53C2\u6570\uFF0C\u5219\u8FD4\u56DEr\u884C[a, b]\u95F4\u7684\u6574\u6570\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">inline</span> int32 <span class="token function">rand_int_internal</span><span class="token punctuation">(</span><span class="token keyword">int</span> min<span class="token punctuation">,</span> <span class="token keyword">int</span> max<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> min<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">PG_FUNCTION_INFO_V1</span><span class="token punctuation">(</span>rows_int<span class="token punctuation">)</span><span class="token punctuation">;</span>
Datum
<span class="token function">rows_int</span><span class="token punctuation">(</span>PG_FUNCTION_ARGS<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">Assert</span><span class="token punctuation">(</span>fcinfo<span class="token operator">-&gt;</span>nargs <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> fcinfo<span class="token operator">-&gt;</span>nargs <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    FuncCallContext     <span class="token operator">*</span>funcctx<span class="token punctuation">;</span>
    int32 times <span class="token operator">=</span> <span class="token function">PG_GETARG_INT32</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u7B2C\u4E00\u6B21\u8C03\u7528SRF\u51FD\u6570\u65F6\u7684\u521D\u59CB\u5316</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">SRF_IS_FIRSTCALL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        MemoryContext   oldcontext<span class="token punctuation">;</span>

        <span class="token comment">/* create a function context for cross-call persistence */</span>
        funcctx <span class="token operator">=</span> <span class="token function">SRF_FIRSTCALL_INIT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">/* switch to memory context appropriate for multiple function calls */</span>
        oldcontext <span class="token operator">=</span> <span class="token function">MemoryContextSwitchTo</span><span class="token punctuation">(</span>funcctx<span class="token operator">-&gt;</span>multi_call_memory_ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment">// \u9700\u8981\u8FD4\u56DEtuple\u7684\u884C\u6570</span>
        funcctx<span class="token operator">-&gt;</span>max_calls <span class="token operator">=</span> times<span class="token punctuation">;</span>

        <span class="token function">MemoryContextSwitchTo</span><span class="token punctuation">(</span>oldcontext<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u6BCF\u6B21\u8C03\u7528SRF\u51FD\u6570\u90FD\u9700\u8981\u7684\u8BBE\u7F6E</span>
    funcctx <span class="token operator">=</span> <span class="token function">SRF_PERCALL_SETUP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>funcctx<span class="token operator">-&gt;</span>call_cntr <span class="token operator">&lt;</span> funcctx<span class="token operator">-&gt;</span>max_calls<span class="token punctuation">)</span>    <span class="token comment">// \u8FD8\u9700\u8981\u8FD4\u56DE\u66F4\u591A\u884C</span>
    <span class="token punctuation">{</span>
        int32 min <span class="token operator">=</span> fcinfo<span class="token operator">-&gt;</span>nargs <span class="token operator">==</span> <span class="token number">3</span> <span class="token operator">?</span> <span class="token function">PG_GETARG_INT32</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
        int32 max <span class="token operator">=</span> fcinfo<span class="token operator">-&gt;</span>nargs <span class="token operator">==</span> <span class="token number">3</span> <span class="token operator">?</span> <span class="token function">PG_GETARG_INT32</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">:</span> INT32_MAX<span class="token punctuation">;</span>
        <span class="token function">SRF_RETURN_NEXT</span><span class="token punctuation">(</span>funcctx<span class="token punctuation">,</span> <span class="token function">Int32GetDatum</span><span class="token punctuation">(</span><span class="token function">rand_int_internal</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span> max<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// \u8FD4\u56DE\u4E00\u884C</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>    <span class="token comment">// \u5DF2\u7ECF\u8FD4\u56DE\u8DB3\u591F\u884C</span>
    <span class="token punctuation">{</span>
        <span class="token function">SRF_RETURN_DONE</span><span class="token punctuation">(</span>funcctx<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// SRF\u51FD\u6570\u7ED3\u675F</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>funcctx-&gt;max_calls</code>\u662F\u9700\u8981\u8C03\u7528SRF\u51FD\u6570\u7684\u6B21\u6570\uFF0C\u5373\u8FD4\u56DE\u7684\u884C\u6570\u3002</p><p>\u4E3A\u4E86\u65B9\u4FBF\u5BF9\u63D2\u4EF6\u8FDB\u884C\u529F\u80FD\u6D4B\u8BD5\uFF0C\u53EF\u4EE5\u521B\u5EFA<code>sql</code>\u548C<code>expected</code>\u76EE\u5F55\uFF0C<code>sql</code>\u76EE\u5F55\u4E0B\u7684<code>pg_testgen.sql</code>\u662FMakefile\u91CC<code>REGRESS</code>\u5B57\u6BB5\u6307\u660E\u7684\u6D4B\u8BD5sql\uFF0C<code>expected</code>\u76EE\u5F55\u4E0B\u540C\u540D\u7684<code>pg_testgen.out</code>\u662F\u5BF9\u5E94\u6D4B\u8BD5sql\u7684\u671F\u671B\u8F93\u51FA\uFF0C\u4F7F\u7528<code>make check</code>\u53EF\u4EE5\u5F88\u65B9\u4FBF\u7684\u8FDB\u884C\u6D4B\u8BD5\u3002\u6D4B\u8BD5\u4F1A\u751F\u6210<code>log</code>\u76EE\u5F55\u5B58\u653E\u6570\u636E\u5E93\u7684\u65E5\u5FD7\uFF0C\u751F\u6210<code>results</code>\u76EE\u5F55\u5B58\u653E\u5B9E\u9645\u7684\u8F93\u51FA\u3002</p><p>\u5F00\u53D1\u63D2\u4EF6\u5B8C\u6210\u540E\uFF0C\u5C06\u63D2\u4EF6\u76EE\u5F55\u653E\u5728<code>contrib</code>\u76EE\u5F55\u4E0B\uFF0C\u6BD4\u5982<code>contrib/pg_testgen</code>\uFF0C\u8FDB\u5165\u63D2\u4EF6\u76EE\u5F55\uFF0C\u4F7F\u7528<code>make</code>\u547D\u4EE4\u7F16\u8BD1\uFF0C\u7136\u540E<code>make install</code>\u5B89\u88C5\u63D2\u4EF6\u3002\u5982\u679C\u6210\u529F\uFF0C\u7528psql\u8FDE\u63A5\u6570\u636E\u5E93\uFF0C\u7528<code>CREATE EXTENSION pg_testgen;</code>\u52A0\u8F7D\u63D2\u4EF6\uFF0C\u5373\u53EF\u4F7F\u7528\u3002</p>`,39),r=s("\u4E00\u4E2A\u6700\u7B80\u5355\u7684\u3001\u5B8C\u6574\u7684\u63D2\u4EF6\u6E90\u4EE3\u7801\uFF1A"),d={href:"https://github.com/yuesong-feng/pg_testgen",target:"_blank",rel:"noopener noreferrer"},k=s("pg_testgen");function v(m,b){const a=i("ExternalLinkIcon");return t(),p("div",null,[u,n("p",null,[r,n("a",d,[k,o(a)])])])}const _=e(l,[["render",v],["__file","PostgreSQL\u63D2\u4EF6\u5F00\u53D1.html.vue"]]);export{_ as default};
