import{_ as o,o as t,c as e,b as n,d as p,a as c,e as s,r as l}from"../app.dbff23ac.mjs";const i={},u=c(`<h1 id="day14-\u652F\u6301\u4E1A\u52A1\u903B\u8F91\u81EA\u5B9A\u4E49\u3001\u5B8C\u5584connection\u7C7B" tabindex="-1"><a class="header-anchor" href="#day14-\u652F\u6301\u4E1A\u52A1\u903B\u8F91\u81EA\u5B9A\u4E49\u3001\u5B8C\u5584connection\u7C7B" aria-hidden="true">#</a> day14-\u652F\u6301\u4E1A\u52A1\u903B\u8F91\u81EA\u5B9A\u4E49\u3001\u5B8C\u5584Connection\u7C7B</h1><p>\u56DE\u987E\u4E4B\u524D\u7684\u6559\u7A0B\uFF0C\u53EF\u4EE5\u770B\u5230\u670D\u52A1\u5668Echo\u4E1A\u52A1\u7684\u903B\u8F91\u5728<code>Connection</code>\u7C7B\u4E2D\u3002\u5982\u679C\u6211\u4EEC\u9700\u8981\u4E0D\u540C\u7684\u4E1A\u52A1\u903B\u8F91\uFF0C\u5982\u642D\u5EFA\u4E00\u4E2AHTTP\u670D\u52A1\u5668\uFF0C\u6216\u662F\u4E00\u4E2AFTP\u670D\u52A1\u5668\uFF0C\u5219\u9700\u8981\u6539\u52A8<code>Connection</code>\u4E2D\u7684\u4EE3\u7801\uFF0C\u8FD9\u663E\u7136\u662F\u4E0D\u5408\u7406\u7684\u3002<code>Connection</code>\u7C7B\u4F5C\u4E3A\u7F51\u7EDC\u5E93\u7684\u4E00\u90E8\u5206\uFF0C\u4E0D\u5E94\u8BE5\u548C\u4E1A\u52A1\u903B\u8F91\u4EA7\u751F\u8054\u7CFB\uFF0C\u4E1A\u52A1\u903B\u8F91\u5E94\u8BE5\u7531\u7F51\u7EDC\u5E93\u7528\u6237\u81EA\u5B9A\u4E49\uFF0C\u5199\u5728<code>server.cpp</code>\u4E2D\u3002\u540C\u65F6\uFF0C\u4F5C\u4E3A\u4E00\u4E2A\u901A\u7528\u7F51\u7EDC\u5E93\uFF0C\u5BA2\u6237\u7AEF\u4E5F\u53EF\u4EE5\u4F7F\u7528\u7F51\u7EDC\u5E93\u6765\u7F16\u5199\u76F8\u5E94\u7684\u4E1A\u52A1\u903B\u8F91\u3002\u4ECA\u5929\u6211\u4EEC\u9700\u8981\u5B8C\u5584<code>Connection</code>\u7C7B\uFF0C\u652F\u6301\u4E1A\u52A1\u903B\u8F91\u81EA\u5B9A\u4E49\u3002</p><p>\u9996\u5148\u6765\u770B\u770B\u6211\u4EEC\u5E0C\u671B\u5982\u4F55\u81EA\u5B9A\u4E49\u4E1A\u52A1\u903B\u8F91\uFF0C\u8FD9\u662F\u4E00\u4E2Aecho\u670D\u52A1\u5668\u7684\u5B8C\u6574\u4EE3\u7801\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  EventLoop <span class="token operator">*</span>loop <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">EventLoop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Server <span class="token operator">*</span>server <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">Server</span><span class="token punctuation">(</span>loop<span class="token punctuation">)</span><span class="token punctuation">;</span>
  server<span class="token operator">-&gt;</span><span class="token function">OnConnect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span>Connection <span class="token operator">*</span>conn<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u4E1A\u52A1\u903B\u8F91</span>
    conn<span class="token operator">-&gt;</span><span class="token function">Read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Message from client &quot;</span> <span class="token operator">&lt;&lt;</span> conn<span class="token operator">-&gt;</span><span class="token function">GetSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">GetFd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">&lt;&lt;</span> conn<span class="token operator">-&gt;</span><span class="token function">ReadBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> std<span class="token double-colon punctuation">::</span>endl<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>conn<span class="token operator">-&gt;</span><span class="token function">GetState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> Connection<span class="token double-colon punctuation">::</span>State<span class="token double-colon punctuation">::</span>Closed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      conn<span class="token operator">-&gt;</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    conn<span class="token operator">-&gt;</span><span class="token function">SetSendBuffer</span><span class="token punctuation">(</span>conn<span class="token operator">-&gt;</span><span class="token function">ReadBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    conn<span class="token operator">-&gt;</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  loop<span class="token operator">-&gt;</span><span class="token function">Loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5F00\u59CB\u4E8B\u4EF6\u5FAA\u73AF</span>
  <span class="token keyword">delete</span> server<span class="token punctuation">;</span>
  <span class="token keyword">delete</span> loop<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u65B0\u5EFA\u4E86\u4E00\u4E2A\u670D\u52A1\u5668\u548C\u4E8B\u4EF6\u5FAA\u73AF\uFF0C\u7136\u540E\u4EE5\u56DE\u8C03\u51FD\u6570\u7684\u65B9\u5F0F\u7F16\u5199\u4E1A\u52A1\u903B\u8F91\u3002\u901A\u8FC7<code>Server</code>\u7C7B\u7684<code>OnConnection</code>\u8BBE\u7F6Elambda\u56DE\u8C03\u51FD\u6570\uFF0C\u56DE\u8C03\u51FD\u6570\u7684\u53C2\u6570\u662F\u4E00\u4E2A<code>Connection</code>\u6307\u9488\uFF0C\u4EE3\u8868\u670D\u52A1\u5668\u5230\u5BA2\u6237\u7AEF\u7684\u8FDE\u63A5\uFF0C\u5728\u51FD\u6570\u4F53\u4E2D\u53EF\u4EE5\u4E66\u5199\u4E1A\u52A1\u903B\u8F91\u3002\u8FD9\u4E2A\u51FD\u6570\u6700\u7EC8\u4F1A\u7ED1\u5B9A\u5230<code>Connection</code>\u7C7B\u7684<code>on_connect_callback_</code>\uFF0C\u4E5F\u5C31\u662F<code>Channel</code>\u7C7B\u5904\u7406\u7684\u4E8B\u4EF6\uFF08\u8FD9\u4E2A\u7248\u672C\u53EA\u8003\u8651\u4E86\u53EF\u8BFB\u4E8B\u4EF6\uFF09\u3002\u8FD9\u6837\u6BCF\u6B21\u6709\u4E8B\u4EF6\u53D1\u751F\uFF0C\u4E8B\u4EF6\u5904\u7406\u5B9E\u9645\u4E0A\u90FD\u5728\u6267\u884C\u7528\u6237\u5728\u8FD9\u91CC\u5199\u7684\u4EE3\u7801\u903B\u8F91\u3002</p><p>\u5173\u4E8E<code>Connection</code>\u7C7B\u7684\u4F7F\u7528\uFF0C\u63D0\u4F9B\u4E86\u4E24\u4E2A\u51FD\u6570\uFF0C\u5206\u522B\u662F<code>Write()</code>\u548C<code>Read()</code>\u3002<code>Write()</code>\u51FD\u6570\u8868\u793A\u5C06<code>write_buffer_</code>\u91CC\u7684\u5185\u5BB9\u53D1\u9001\u5230\u8BE5<code>Connection</code>\u7684socket\uFF0C\u53D1\u9001\u540E\u4F1A\u6E05\u7A7A\u5199\u7F13\u51B2\u533A\uFF1B\u800C<code>Read()</code>\u51FD\u6570\u8868\u793A\u6E05\u7A7A<code>read_buffer_</code>\uFF0C\u7136\u540E\u5C06TCP\u7F13\u51B2\u533A\u5185\u7684\u6570\u636E\u8BFB\u53D6\u5230\u8BFB\u7F13\u51B2\u533A\u3002</p><p>\u5728\u4E1A\u52A1\u903B\u8F91\u4E2D\uFF0C<code>conn-&gt;Read()</code>\u8868\u793A\u4ECE\u5BA2\u6237\u7AEF\u8BFB\u53D6\u6570\u636E\u5230\u8BFB\u7F13\u51B2\u533A\u3002\u5728\u53D1\u9001\u56DE\u5BA2\u6237\u7AEF\u4E4B\u524D\uFF0C\u5BA2\u6237\u7AEF\u6709\u53EF\u80FD\u4F1A\u5173\u95ED\u8FDE\u63A5\uFF0C\u6240\u4EE5\u9700\u8981\u5148\u5224\u65AD<code>Connection</code>\u7684\u72B6\u6001\u662F\u5426\u4E3A<code>Closed</code>\u3002\u7136\u540E\u5C06\u5199\u7F13\u51B2\u533A\u8BBE\u7F6E\u4E3A\u548C\u8BFB\u7F13\u51B2\u533A\u4E00\u6837\u7684\u5185\u5BB9<code>conn-&gt;SetSendBuffer(conn-&gt;ReadBuffer())</code>\uFF0C\u6700\u540E\u8C03\u7528<code>conn-&gt;Write()</code>\u5C06\u5199\u7F13\u51B2\u533A\u7684\u6570\u636E\u53D1\u9001\u7ED9\u5BA2\u6237\u7AEF\u3002</p><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u73B0\u5728<code>Connection</code>\u7C7B\u53EA\u6709\u4ECEsocket\u8BFB\u5199\u6570\u636E\u7684\u903B\u8F91\uFF0C\u4E0E\u5177\u4F53\u4E1A\u52A1\u6CA1\u6709\u4EFB\u4F55\u5173\u7CFB\uFF0C\u4E1A\u52A1\u5B8C\u5168\u7531\u7528\u6237\u81EA\u5B9A\u4E49\u3002</p><p>\u5728\u5BA2\u6237\u7AEF\u6211\u4EEC\u4E5F\u5E0C\u671B\u4F7F\u7528\u7F51\u7EDC\u5E93\u6765\u5199\u4E1A\u52A1\u903B\u8F91\uFF0C\u9996\u5148\u6765\u770B\u770B\u5BA2\u6237\u7AEF\u7684\u4EE3\u7801\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  Socket <span class="token operator">*</span>sock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">Socket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  sock<span class="token operator">-&gt;</span><span class="token function">Connect</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span> <span class="token number">1234</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Connection <span class="token operator">*</span>conn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">Connection</span><span class="token punctuation">(</span><span class="token keyword">nullptr</span><span class="token punctuation">,</span> sock<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    conn<span class="token operator">-&gt;</span><span class="token function">GetlineSendBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    conn<span class="token operator">-&gt;</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>conn<span class="token operator">-&gt;</span><span class="token function">GetState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> Connection<span class="token double-colon punctuation">::</span>State<span class="token double-colon punctuation">::</span>Closed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      conn<span class="token operator">-&gt;</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    conn<span class="token operator">-&gt;</span><span class="token function">Read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Message from server: &quot;</span> <span class="token operator">&lt;&lt;</span> conn<span class="token operator">-&gt;</span><span class="token function">ReadBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> std<span class="token double-colon punctuation">::</span>endl<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">delete</span> conn<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\u8FD9\u91CC\u548C\u670D\u52A1\u5668\u6709\u5F88\u5927\u7684\u4E0D\u540C\uFF0C\u4E4B\u524D\u8BBE\u8BA1\u7684<code>Connection</code>\u7C7B\u663E\u7136\u4E0D\u80FD\u6EE1\u8DB3\u8981\u6C42\uFF0C\u6240\u4EE5\u9700\u8981\u5B8C\u5584<code>Connection</code>\u3002</p><p>\u9996\u5148\uFF0C\u8FD9\u91CC\u6CA1\u6709\u670D\u52A1\u5668\u548C\u4E8B\u4EF6\u5FAA\u73AF\uFF0C\u4EC5\u4EC5\u4F7F\u7528\u4E86\u4E00\u4E2A\u88F8\u7684<code>Connection</code>\u7C7B\u6765\u8868\u793A\u4ECE\u5BA2\u6237\u7AEF\u5230\u670D\u52A1\u5668\u7684\u8FDE\u63A5\u3002\u6240\u4EE5\u6B64\u65F6<code>Read()</code>\u8868\u793A\u4ECE\u670D\u52A1\u5668\u8BFB\u53D6\u5230\u5BA2\u6237\u7AEF\uFF0C\u800C<code>Write()</code>\u8868\u793A\u4ECE\u5BA2\u6237\u7AEF\u5199\u5165\u5230\u670D\u52A1\u5668\uFF0C\u548C\u4E4B\u524D\u670D\u52A1\u5668\u7684<code>Conneciont</code>\u7C7B\u65B9\u5411\u5B8C\u5168\u76F8\u53CD\u3002\u8FD9\u6837<code>Connection</code>\u5C31\u53EF\u4EE5\u540C\u65F6\u8868\u793AServer-&gt;Client\u6216\u8005Client-&gt;Server\u7684\u8FDE\u63A5\uFF0C\u4E0D\u9700\u8981\u65B0\u5EFA\u4E00\u4E2A\u7C7B\u6765\u533A\u5206\uFF0C\u5927\u5927\u63D0\u9AD8\u4E86\u901A\u7528\u6027\u548C\u4EE3\u7801\u590D\u7528\u3002</p><p>\u5176\u6B21\uFF0C\u5BA2\u6237\u7AEF<code>Connection</code>\u6CA1\u6709\u7ED1\u5B9A\u4E8B\u4EF6\u5FAA\u73AF\uFF0C\u6240\u4EE5\u5C06\u7B2C\u4E00\u4E2A\u53C2\u6570\u8BBE\u7F6E\u4E3A<code>nullptr</code>\u8868\u793A\u4E0D\u4F7F\u7528\u4E8B\u4EF6\u5FAA\u73AF\uFF0C\u8FD9\u65F6\u5C06\u4E0D\u4F1A\u6709<code>Channel</code>\u7C7B\u521B\u5EFA\u6765\u5206\u914D\u5230<code>EventLoop</code>\uFF0C\u8868\u793A\u4F7F\u7528\u4E00\u4E2A\u88F8\u7684<code>Connection</code>\u3002\u56E0\u6B64\u4E1A\u52A1\u903B\u8F91\u4E5F\u4E0D\u7528\u8BBE\u7F6E\u670D\u52A1\u5668\u56DE\u8C03\u51FD\u6570\uFF0C\u800C\u662F\u76F4\u63A5\u5199\u5728\u5BA2\u6237\u7AEF\u4EE3\u7801\u4E2D\u3002</p><p>\u53E6\u5916\uFF0C\u867D\u7136\u670D\u52A1\u5668\u5230\u5BA2\u6237\u7AEF\uFF08Server-&gt;Client\uFF09\u7684\u8FDE\u63A5\u90FD\u4F7F\u7528\u975E\u963B\u585E\u5F0Fsocket IO\uFF08\u4E3A\u4E86\u642D\u914Depoll ET\u6A21\u5F0F\uFF09\uFF0C\u4F46\u5BA2\u6237\u7AEF\u5230\u670D\u52A1\u5668\uFF08Client-&gt;Server\uFF09\u7684\u8FDE\u63A5\u5374\u4E0D\u4E00\u5B9A\uFF0C\u5F88\u591A\u4E1A\u52A1\u90FD\u9700\u8981\u4F7F\u7528\u963B\u585E\u5F0Fsocket IO\uFF0C\u6BD4\u5982\u6211\u4EEC\u5F53\u524D\u7684echo\u5BA2\u6237\u7AEF\u3002\u4E4B\u524D<code>Connection</code>\u7C7B\u7684\u8BFB\u5199\u903B\u8F91\u90FD\u662F\u975E\u963B\u585E\u5F0Fsocket IO\uFF0C\u5728\u8FD9\u4E2A\u7248\u672C\u652F\u6301\u4E86\u975E\u963B\u585E\u5F0F\u8BFB\u5199\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">Connection</span><span class="token double-colon punctuation">::</span><span class="token function">Read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">ASSERT</span><span class="token punctuation">(</span>state_ <span class="token operator">==</span> State<span class="token double-colon punctuation">::</span>Connected<span class="token punctuation">,</span> <span class="token string">&quot;connection state is disconnected!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  read_buffer_<span class="token operator">-&gt;</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>sock_<span class="token operator">-&gt;</span><span class="token function">IsNonBlocking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">ReadNonBlocking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">ReadBlocking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token class-name">Connection</span><span class="token double-colon punctuation">::</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">ASSERT</span><span class="token punctuation">(</span>state_ <span class="token operator">==</span> State<span class="token double-colon punctuation">::</span>Connected<span class="token punctuation">,</span> <span class="token string">&quot;connection state is disconnected!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>sock_<span class="token operator">-&gt;</span><span class="token function">IsNonBlocking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">WriteNonBlocking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">WriteBlocking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  send_buffer_<span class="token operator">-&gt;</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ps.\u5982\u679C\u8FDE\u63A5\u662F\u4ECE\u670D\u52A1\u5668\u5230\u5BA2\u6237\u7AEF\uFF0C\u6240\u6709\u7684\u8BFB\u5199\u90FD\u5E94\u91C7\u7528\u975E\u963B\u585E\u5F0FIO\uFF0C\u963B\u585E\u5F0F\u8BFB\u5199\u662F\u63D0\u4F9B\u7ED9\u5BA2\u6237\u7AEF\u4F7F\u7528\u7684\u3002</p><p>\u81F3\u6B64\uFF0C\u4ECA\u5929\u7684\u6559\u7A0B\u5DF2\u7ECF\u7ED3\u675F\u4E86\u3002\u6559\u7A0B\u91CC\u53EA\u4F1A\u5305\u542B\u6781\u5C0F\u4E00\u90E8\u5206\u5185\u5BB9\uFF0C\u5927\u91CF\u7684\u5DE5\u4F5C\u90FD\u5728\u4EE3\u7801\u91CC\uFF0C\u8BF7\u52A1\u5FC5\u7ED3\u5408\u6E90\u4EE3\u7801\u9605\u8BFB\u3002\u5728\u4ECA\u5929\u7684\u6559\u7A0B\u4E2D\uFF0C\u6211\u4EEC\u5B8C\u5584\u4E86<code>Connection</code>\u7C7B\uFF0C\u5C06<code>Connection</code>\u7C7B\u4E0E\u4E1A\u52A1\u903B\u8F91\u5B8C\u5168\u5206\u79BB\uFF0C\u4E1A\u52A1\u903B\u8F91\u5B8C\u5168\u7531\u7528\u6237\u81EA\u5B9A\u4E49\u3002\u81F3\u6B64\uFF0C\u6211\u4EEC\u7684\u7F51\u7EDC\u5E93\u6838\u5FC3\u4EE3\u7801\u5DF2\u7ECF\u5B8C\u5168\u8131\u79BB\u4E86\u4E1A\u52A1\uFF0C\u6210\u4E3A\u4E00\u4E2A\u771F\u6B63\u610F\u4E49\u4E0A\u7684\u7F51\u7EDC\u5E93\u3002\u4ECA\u5929\u6211\u4EEC\u4E5F\u5C06<code>Connection</code>\u901A\u7528\u5316\uFF0C\u540C\u65F6\u652F\u6301Server-&gt;Client\u548CClient-&gt;Server\uFF0C\u4F7F\u5176\u53EF\u4EE5\u5728\u5BA2\u6237\u7AEF\u8131\u79BB<code>EventLoop</code>\u5355\u72EC\u7ED1\u5B9Asocket\u4F7F\u7528\uFF0C\u8BFB\u5199\u64CD\u4F5C\u4E5F\u90FD\u652F\u6301\u4E86\u963B\u585E\u5F0F\u548C\u975E\u963B\u585E\u5F0F\u4E24\u79CD\u6A21\u5F0F\u3002</p><p>\u5230\u4ECA\u5929\uFF0C\u672C\u6559\u7A0B\u5DF2\u7ECF\u8FDB\u884C\u4E86\u4E00\u534A\uFF0C\u6211\u4EEC\u5F00\u53D1\u4E86\u4E00\u4E2A\u771F\u6B63\u610F\u4E49\u4E0A\u7684\u7F51\u7EDC\u5E93\uFF0C\u4F7F\u7528\u8FD9\u4E2A\u7F51\u7EDC\u5E93\uFF0C\u53EA\u9700\u8981\u4E0D\u523020\u884C\u4EE3\u7801\uFF0C\u5C31\u53EF\u4EE5\u642D\u5EFA\u4E00\u4E2Aecho\u670D\u52A1\u5668\u3001\u5BA2\u6237\u7AEF\uFF08\u5B8C\u6574\u7A0B\u5E8F\u5728<code>test</code>\u76EE\u5F55\uFF09\u3002\u4F46\u8FD9\u53EA\u662F\u4E00\u4E2A\u6700\u7B80\u5355\u7684\u73A9\u5177\u578B\u7F51\u7EDC\u5E93\uFF0C\u9700\u8981\u505A\u7684\u5DE5\u4F5C\u8FD8\u5F88\u591A\uFF0C\u5728\u4ECA\u540E\u7684\u6559\u7A0B\u91CC\uFF0C\u6211\u4EEC\u4F1A\u5BF9\u8FD9\u4E2A\u7F51\u7EDC\u5E93\u4E0D\u65AD\u5B8C\u5584\u3001\u4E0D\u65AD\u63D0\u5347\u6027\u80FD\uFF0C\u4F7F\u5176\u53EF\u4EE5\u5728\u751F\u4EA7\u73AF\u5883\u4E2D\u4F7F\u7528\u3002</p>`,18),k=s("\u5B8C\u6574\u6E90\u4EE3\u7801\uFF1A"),d={href:"https://github.com/yuesong-feng/30dayMakeCppServer/tree/main/code/day14",target:"_blank",rel:"noopener noreferrer"},r=s("https://github.com/yuesong-feng/30dayMakeCppServer/tree/main/code/day14");function v(m,b){const a=l("ExternalLinkIcon");return t(),e("div",null,[u,n("p",null,[k,n("a",d,[r,p(a)])])])}const g=o(i,[["render",v],["__file","day14-\u652F\u6301\u4E1A\u52A1\u903B\u8F91\u81EA\u5B9A\u4E49\u3001\u5B8C\u5584Connection\u7C7B.html.vue"]]);export{g as default};
